<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RequirementsLive.Sdk</name>
    </assembly>
    <members>
        <member name="P:RequirementsLive.Sdk.Api.ApiClientConfiguration.RequestTimeout">
            <summary>
            Gets or sets the default request timeout in seconds. The default is 600 seconds.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.ApiClientConfiguration.RestServiceUrl">
            <summary>
            Gets the service url used when sending REST requests.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.ApiClientConfiguration.Site">
            <summary>
            Gets or sets the site used when sending API requests.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.ApiClientConfiguration.SoapBinding">
            <summary>
            Gets the binding used when sending SOAP requests.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.ApiClientConfiguration.SoapMessageVersion">
            <summary>
            Gets the message version used when sending SOAP requests.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.ApiClientConfiguration.SoapServiceUrl">
            <summary>
            Gets the service url used when sending SOAP requests.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.ApiClientConfiguration.UseSsl">
            <summary>
            Gets or sets whether to use SSL when sending API requests.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Dto.Address">
            <summary>
                A Simple POCO to represent an Address.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Address.CountryCode">
            <summary>
                The ISO Alpha-2 Country Code, a 2 character ISO standard for Countries. Example: US = United States of America
            </summary>
            <remarks>
                The CountryCode values are stored in a lookup table that can be queried with the <see cref="T:RequirementsLive.Sdk.Api.Business.Model.ListObjects" /> API.
                Use AppName Core_Admin_Country
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Asset.StoreId">
            <summary>
                The unique internal Id for the application record.
                This can be blank when creating a new record.
            </summary>
            <remarks>
                Every record has a StoreId.
                If this is blank during a create request, one will be generated.
                This may also be blank during an Update request as long as the existing record can be found with the AssetId.
            </remarks>        
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Asset.AssetId">
            <summary>
            The unique Asset ID
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Asset.Type">
            <summary>
            The Asset Type.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Asset.Subtype">
            <summary>
            The Asset Subtype.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Asset.Description">
            <summary>
            The Asset Description.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Asset.Status">
            <summary>
            The Asset Status, such as Active, Inactive, or Deleted.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Dto.DtoWithExtraInformation">
            <summary>
            A Base Class for POCO/Dtos.
            This contains a dictionary for ExtraInformation that serializes to XML the way we want it to, while also serializing to JSON the way we want it to
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.DtoWithExtraInformation.ExtraInformation">
            <summary>
                A place to provide custom properties not explicitly supported by members of this class.
            </summary>
            <remarks>
            Not Serialized by XmlSerializer as XML, but is Serialized as JSON by Service Stack
            The XmlSerializer uses a trick to result in serialized key value pair data.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.DtoWithExtraInformation.__NodeThatSerializesAsExtraInformation">
            <summary>
            Property to achieve desired XML Serialization. 
            Not serialized by ServiceStack. Is serialized by XmlSerializer.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Dto.XmlFriendlyDictionary">
            <summary>
            This is a class that helps the XML serializer output dictionary XML the same was as if
            the dictionary was serialized to JSON, and the JSON string converted to XML.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.XmlFriendlyDictionary.XmlData">
            <summary>
            XML Serialization trick.
            Nodes at this level serialize as:
                            <KeyName1>some value</KeyName1>
                            <KeyName2>another value</KeyName2>
            The property that declares an instance of this at the type provides
            the parent element name.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Dto.Organization">
            <summary>
                Represents an Organization.
                The list of Organizations can be queried by using the <see cref="T:RequirementsLive.Sdk.Api.Business.Model.ListObjects" />
                API with AppName Core_Organization.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Organization.StoreId">
            <summary>
                The unique internal Id for the Organization record.
            </summary>
            <remarks>
                Specify this when updating an existing record and you know the StoreId
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Organization.OrganizationId">
            <summary>
                The Unique Organization Id for the Organization record
            </summary>
            <remarks>
                If this OrganizationId already exists, that record will be overwritten with this instance
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Organization.BusinessType">
            <summary>
                The type of business such as Distributor, Restaurant, Supplier, Test Lab, etc.
            </summary>
            <remarks>
                The complete list of supported BusinessType values may vary and are found in a lookup table(app)
                You can query the BusinessType lookup table by using the <see cref="T:RequirementsLive.Sdk.Api.Business.Model.ListObjects" /> API
                and using AppName Core_Admin_Business_Type, property: Business_Type_Id
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Organization.Status">
            <summary>
                The Organization status, such as "Approved" or "Pending Approval", or "Deleted" (without the double quotes).
            </summary>
            <remarks>
                This value comes from a Lookup Table, for a complete list of values, you may need to query the lookup table.
                Contact us with questions if other statuses are needed.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Organization.ParentOrganization">
            <summary>
                A reference to the Parent Organization that this Organization is associated with. Contains Id and Name
            </summary>
            <remarks>
                For a list of all Organizations, use the <see cref="T:RequirementsLive.Sdk.Api.Business.Model.ListObjects" />
                with AppName Core_Organization, and properties Organization_ID, and/or Organization_Name.
                This property may be null if there no Parent Organization, but if specified, the referenced Organization should
                already exist via previous calls to
                <see cref="T:RequirementsLive.Sdk.Api.Business.Model.PutOrganization" />
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Organization.MailingAddress">
            <summary>
                A mailing address to be used when the mailing address is different than the Physical Address.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Dto.OrganizationReference">
            <summary>
            A reference to an Organization.
                The list of Organizations can be queried by using the <see cref="T:RequirementsLive.Sdk.Api.Business.Model.ListObjects" />
                API with AppName Core_Organization, using the Organization_ID or Organization_Name property values.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Dto.Location">
            <summary>
                Represents an Organization Location within the site.  Organizations can be queried by using the
                <see cref="T:RequirementsLive.Sdk.Api.Business.Model.ListObjects" /> API with AppName Core_Organization_Location.
                Organization Locations can have a reference to a parent Organization.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Location.StoreId">
            <summary>
                The unique internal Id for the Location record.
            </summary>
            <remarks>
                Specify this when updating an existing record and you know the StoreId
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Location.LocationId">
            <summary>
                The Unique Location Id for the location record
            </summary>
            <remarks>
                If this LocationId already exists, that record will be overwritten with this instance
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Location.BusinessType">
            <summary>
                The type of business such as Distributor, Restaurant, Supplier, Test Lab, etc.
            </summary>
            <remarks>
                The complete list of supported BusinessType values may vary and are found in a lookup table(app)
                You can query the BusinessType lookup table by using the <see cref="T:RequirementsLive.Sdk.Api.Business.Model.ListObjects" /> API
                and using AppName Core_Admin_Business_Type, property: Business_Type_Id
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Location.Status">
            <summary>
                The Location status, such as "Approved" or "Pending Approval", or "Deleted" (without the double quotes).
            </summary>
            <remarks>
                This value comes from a Lookup Table, for a complete list of values, you may need to query the lookup table.
                Contact us with questions if other statuses are needed.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.Location.ParentOrganization">
            <summary>
                A reference to the Organization that this Location is associated with. Contains Id and Name
            </summary>
            <remarks>
                <para>
                    For a list of all Organizations, use the <see cref="T:RequirementsLive.Sdk.Api.Business.Model.ListObjects" />
                    with AppName Core_Organization, and properties Organization_ID, and/or Organization_Name
                </para>
                <para>
                    This property may be null, but if specified it should reference an Organization that already exists via
                    previous calls
                    to <see cref="T:RequirementsLive.Sdk.Api.Business.Model.PutOrganization" />
                </para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.User.StoreId">
            <summary>
                The unique internal Id for the application record.
                This can be blank when creating a new record.
            </summary>
            <remarks>
                Every record has a StoreId.
                If this is blank during a create request, one will be generated.
                This may also be blank during an Update request as long as the existing record can be found with the UserName or
                Email.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.User.UserName">
            <summary>
                The unique user name for this user.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.User.Email">
            <summary>
                The Email Address associated with this user.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.User.Status">
            <summary>
                The status of this user account: Approved or Deleted.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.User.LanguagePreference">
            <summary>
                The language preference code for this user, the default is en-US.
            </summary>
            <remarks>
                <para>
                    For a list of languages supported by the platform, see http://{yoursite}.compliancemetrix.com/rql/preferences
                </para>
                <para>
                    Supported language codes are based on the Culture codes supported in the .Net framework.
                </para>
                <para>
                    <see cref="!:https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo(vs.71).aspx" /> for a list
                    of language codes.
                    Not all languages are supported by the platform.
                </para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.User.OrganizationIds">
            <summary>
                A list of Organization Identifiers that referencing Organizations a user has access to.
                <para>
                    Locations need to be imported using <see cref="T:RequirementsLive.Sdk.Api.Business.Model.PutOrganization" /> BEFORE importing Users that reference
                    them.
                </para>
            </summary>
            <remarks>This is used by the platform to restrict visible records via a Data Firewall</remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.User.LocationIds">
            <summary>
                A list of Location Identifiers that this user has access to.
                <para>Locations need to be imported using <see cref="T:RequirementsLive.Sdk.Api.Business.Model.PutLocation" /> BEFORE importing Users that reference them.</para>
            </summary>
            <remarks>
                <para>
                    The Location Id is a string value that is the key to a record in the Locations app.
                </para>
                <para>This is used by the platform to restrict visible records via a Data Firewall</para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.User.ProfileIds">
            <summary>
                A list of Profile identifiers that this user has membership in.
            </summary>
            <remarks>
                The Profile Id is a string value that is the key to a record in the Profiles app.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.User.SendNewUserNotification">
            <summary>
                When creating a user, setting this to true will cause the new user email notification to be sent, otherwise no
                email is sent.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Dto.User.ForceEndUserLicenseAcceptance">
            <summary>
                When creating or updating a user, setting this to true will force the user to accept the End User License
                Agreement(EULA) the next time they log in.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.CountObjects.AppName">
            <summary>
            The name of the app being queried
            </summary>        
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.CountObjects.Filter">
            <summary>
                A Sql queue filter
            </summary>
            <value>
                The queue filter.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Model.CountObjectsResponse">
            <summary>
            Represents the response object for the CountEntities API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.CountObjectsResponse.Count">
            <summary>
            The Count of stores found by the <see cref="T:RequirementsLive.Sdk.Api.Business.Model.CountObjects"/>
            </summary>        
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Model.GetAsset">
            <summary>
                The GetAsset request object containing search criteria. Used to find existing Assets.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetAsset.Criteria">
            <summary>
                Search Critera parameters to select the desired Asset, either <see cref="P:RequirementsLive.Sdk.Api.Business.Model.GetAssetSearchCriteria.StoreId" /> or
                <see cref="P:RequirementsLive.Sdk.Api.Business.Model.GetAssetSearchCriteria.AssetId" />.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Model.GetAssetSearchCriteria">
            <summary>
                A class to allow an Asset to be retrieved by either of 2 key values.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetAssetSearchCriteria.StoreId">
            <summary>
                Search by StoreId to return a specific Asset
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetAssetSearchCriteria.AssetId">
            <summary>
                Search by Asset ID to return a specific Asset
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetAssetResponse.Asset">
            <summary>
            The found <see cref="T:RequirementsLive.Sdk.Api.Business.Dto.Asset"/> or null if not found.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetLocation.Criteria">
            <summary>
            Search criteria to find the requested location.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Model.GetLocationSearchCriteria">
            <summary>
                A class to allow a Location to be retrieved by key values.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetLocationSearchCriteria.StoreId">
            <summary>
                Search by StoreId to return a specific Location
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetLocationSearchCriteria.LocationId">
            <summary>
                Search by Location ID to return a specific Location
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetLocationResponse.Location">
            <summary>
                The found Location.  If this is null, it wasn't found.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetOrganization.Criteria">
            <summary>
                The search criteria to find the desired Organization.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetOrganizationSearchCriteria.StoreId">
            <summary>
                The StoreId to search by.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetOrganizationSearchCriteria.OrganizationId">
            <summary>
                The Organization Id to search by.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetOrganizationResponse.Organization">
            <summary>
                The found Organization, or null if not found
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.PutAssetResponse.StoreId">
            <summary>
                This is the unique Id of the newly created or updated Asset record.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Model.PutLocation">
            <summary>
                An API to create or update a Location record.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.PutLocation.Location">
            <summary>
                A completely filled out Location dto that will be used to create or update a new Location record.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.PutLocationResponse.StoreId">
            <summary>
                The internal store id of the location record that was created or updated.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Model.PostObject">
            <summary>
                A request that allows you to pass any object to the specified <see cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.AppName"/>
                An <see cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.ObjectName"/> allows the receiver to identify the type contained in the request.
                A <see cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.Filter"/> allows the caller to target a specific store.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.AppName">
            <summary>
                The Target AppName meant to receive this object.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.ObjectName">
            <summary>
                An identifier allowing the recipient to know the object type passed in the HTTP request body.
            </summary>
            <remarks>
                <para>
                    When this object is posted, it will be converted to XML and placed in a system variable that is defined when the Workbook is run.
                    A PBL @execute block can access it via $System:API/Request/{ObjectName}
                    In this way, a single app can respond to multiple PostObject API commands and handle each one seperately based on <see cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.ObjectName"/>.
                    If <see cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.ObjectName"/> is null, the "Object" is the name used, eg: $System:API/Request/Object
                </para>
                <para>
                    This property may be null, in which case the object name "Object" is assumed, resulting in an XML node in the
                    $System:API variable named $System:API/Request/Object.
                </para>
            <para>
            In PBL:
                   @execute
                   @execute-when "is-not-blank($System:API/Request/Object)"
                       @@ do stuff
                   @end-execute
            </para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.Filter">
            <summary>
                A Filter that allows this object to be posted to a specific record.
            </summary>
            <remarks>
                <para>
                    The filter may be null, meaning that it will attempt to create a new record.
                    If the filter is null, or if it returns 0 records, it will attempt to create a new record.
                    If the new record violates a unique constraint in the database, an exception will be thrown.
                </para>
                <para>
                    Filters should return no more than 1 record. If a filter returns more than 1 record, an Exception will be
                    thrown.
                </para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.RequestStream">
            <summary>
                The request stream of the HTTP body.  Expected to contain JSON.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.Model.PostObject.Create(System.String,System.Object,System.String,System.String)">
            <summary>
                Creates a PostOjbect request that may be used with
                <see cref="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.PostObject``1(RequirementsLive.Sdk.Api.Business.Model.PostObject)" />
            </summary>
            <param name="appName">The destination appName that will consume this object</param>
            <param name="object">The object to post to the app</param>
            <param name="objectName">The name of the object being posted for apps that can handle multiple request types</param>
            <param name="filter">
                A SQL queue filter so that a specific record is updated. Filters need to return 0 or 1 row,
                depending on new or existing. <seealso cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.Filter" />
            </param>        
            <returns></returns>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.PutUserResponse.StoreId">
            <summary>
                This is the unique Id of the newly created or updated User record.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetUser.Criteria">
            <summary>
                Search Criteria to find a User based on one of several search keys.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Model.GetUserSearchCriteria">
            <summary>
                A class to allow a User to be retrieved by either of 3 key values.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetUserSearchCriteria.StoreId">
            <summary>
                Search by StoreId to return a specific User
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetUserSearchCriteria.UserName">
            <summary>
                Search by User_Name to return a specific User
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetUserSearchCriteria.Email">
            <summary>
                Search by Email to return a specific user
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.GetUserResponse.User">
            <summary>
            The User found by the <see cref="T:RequirementsLive.Sdk.Api.Business.Model.GetUser"/> request based on the <see cref="T:RequirementsLive.Sdk.Api.Business.Model.GetUserSearchCriteria"/> 
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.ListObjects.Properties">
            <summary>
                This is the list of the columns in the Entity that are being selected
            </summary>
            <value>
                The properties of the entity being selected
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.ListObjects.Filter">
            <summary>
                A Sql queue filter
            </summary>
            <value>
                The queue filter.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.ListObjects.PageIndex">
            <summary>
                Gets or sets the index of the page to get
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.ListObjects.PageSize">
            <summary>
                Gets or sets the size of the page.
            </summary>
            <value>
                The size of the page.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.ListObjectsResponse.Properties">
            <summary>
                Contains the list of column names returned from the Object
            </summary>
            <value>
                The properties.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.ListObjectsResponse.Items">
            <summary>
                A collection of found Entities
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Model.ListedObject">
            <summary>
                Represents one row of selected entity data.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.ListedObject.Item(System.String)">
            <summary>
                An indexer to gets the property value associated with the with the specified property name.
            </summary>
            <value>
                The property value
            </value>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.ListedObject.Response">
            <summary>
                This is a reference to the <see cref="T:RequirementsLive.Sdk.Api.Business.Model.ListObjectsResponse" /> which contains this containing this
                <see cref="T:RequirementsLive.Sdk.Api.Business.Model.ListedObject" /> instance.
            </summary>
            <value>
                The response.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.ListedObject.StoreId">
            <summary>
                The store identifier for this entity
            </summary>
            <value>
                The store identifier.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Business.Model.ListedObject.Values">
            <summary>
                The list of values associated with the selected entity. The index into this List matches up with the index of the
                property name in <seealso cref="P:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesResponse.Properties" />
            </summary>
            <value>
                The values.
            </value>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.Model.ListedObject.ToDateTime(System.String)">
            <summary>
                Converts a property value from a string to a DateTime containing local time, if that property contains a DateTime
                value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.Model.ListedObject.ToDateTimeUtc(System.String)">
            <summary>
                Converts a property value from a string to a DateTime containing UTC, if that property contains a DateTime value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
            <remarks>
                DateTime values are assumed to be UTC.
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.Model.NamespaceDoc">
            <summary>
            Contains the types used when communicating with platform data services.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient">
            <summary>
                The Rql Business API client.  An API to import and update business objects in the Platform.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.CountObjects(RequirementsLive.Sdk.Api.Business.Model.CountObjects)">
            <inheritdoc />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.GetLocation(RequirementsLive.Sdk.Api.Business.Model.GetLocation)">
            <inheritdoc />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.GetOrganization(RequirementsLive.Sdk.Api.Business.Model.GetOrganization)">
            <inheritdoc />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.PutAsset(RequirementsLive.Sdk.Api.Business.Model.PutAsset)">
            <inheritdoc />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.PutLocation(RequirementsLive.Sdk.Api.Business.Model.PutLocation)">
            <inheritdoc />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.PostObject``1(RequirementsLive.Sdk.Api.Business.Model.PostObject)">
            <inheritdoc />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.PutOrganization(RequirementsLive.Sdk.Api.Business.Model.PutOrganization)">
            <inheritdoc />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.PutUser(RequirementsLive.Sdk.Api.Business.Model.PutUser)">
            <inheritdoc />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.GetUser(RequirementsLive.Sdk.Api.Business.Model.GetUser)">
            <inheritdoc />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.ListObjects(RequirementsLive.Sdk.Api.Business.Model.ListObjects)">
            <inheritdoc />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.#ctor(System.String)">
            <summary>
                Instantiates an instance of <see cref="T:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient" /> for a connection with the specified site name
            </summary>
            <param name="site">The site name that the api instance will be comminucating with.</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient.#ctor(RequirementsLive.Sdk.Api.Business.RqlBusinessApiClientConfiguration)">
            <summary>
                Instantiates an instance of <see cref="T:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClient" /> for a connection with the site and options
                specified in the <see cref="T:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClientConfiguration" />
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClientExtensions">
            <summary>
                Extensions to provide additional signatures for <see cref="T:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient"/>
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClientExtensions.PostObject(RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient,RequirementsLive.Sdk.Api.Business.Model.PostObject)">
            <summary>
                Posts an object to the target <see cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.AppName" /> for processing and returns the raw response as a string.
                The response JSON should always contain the StoreId property, except in rare cases where a handler results in an
                empty string.
            </summary>
            <param name="request">A <see cref="T:RequirementsLive.Sdk.Api.Business.Model.PostObject" /> request</param>
            <returns>
                <para>
                    If the object request handler specifically does not build a request object, and the request does not result
                    in a saved record in the database, this method could return an empty string.
                </para>
                <para>
                    Normally, the JSON response should always include a StoreId property, along with any other properties defined
                    by the request handler.
                </para>
            </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClientExtensions.PostObject(RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient,System.String,System.Object,System.String,System.String)">
            <summary>
                Posts an oject to the specified appName and returns the raw response as JSON structure than can be serialized into
                a type.
                The response JSON should always contain the StoreId property, except in rare cases where a handler results in an
                empty string.
            </summary>
            <param name="api">api client instance</param>
            <param name="appName">The destination appName that will consume this object</param>
            <param name="object">The object to post to the app</param>
            <param name="objectName">
                The name of the object being posted for apps that can handle multiple request types.
                <seealso cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.ObjectName" />
            </param>
            <param name="filter">
                A SQL queue filter so that a specific record is updated. Filters need to return 0 or 1 row,
                depending on new or existing. <seealso cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.Filter" />
            </param>
            <returns>
                <para>
                    If the object request handler specifically does not build a request object, and the request does not result
                    in a saved record in the database, this method could return an empty string.
                </para>
                <para>
                    Normally, the JSON response should always include a StoreId property, along with any other properties defined
                    by the request handler.
                </para>
            </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClientExtensions.PostObject``1(RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient,System.String,System.Object,System.String,System.String)">
            <summary>
                Posts an object when you expect a well formed JSON response that maps to typeof(TResponse)
            </summary>
            <typeparam name="TResponse">A type that can be serialized from a JSON response</typeparam>
            <param name="api">api client instance</param>
            <param name="appName">The destination appName that will consume this object</param>
            <param name="object">The object to post to the app</param>
            <param name="objectName">
                The name of the object being posted for apps that can handle multiple request types.
                <seealso cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.ObjectName" />
            </param>
            <param name="filter">
                A SQL queue filter so that a specific record is updated. Filters need to return 0 or 1 row,
                depending on new or existing.
                <seealso cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.Filter" />. An exception is throw in the filter returns mroe than one row.
            </param>        
            <returns>An instance of TResponse, deserialized from JSON, or null.</returns>
            <remarks>
                You can use this method with a TResponse of type string to see the raw response, or call
                <see cref="M:RequirementsLive.Sdk.Api.Business.RqlBusinessApiClientExtensions.PostObject(RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient,System.String,System.Object,System.String,System.String)" />
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient">
            <summary>
                An interface represeting the RQL Business API client.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.PutAsset(RequirementsLive.Sdk.Api.Business.Model.PutAsset)">
            <summary>
                Puts an <see cref="T:RequirementsLive.Sdk.Api.Business.Dto.Asset" /> into the system.
            </summary>
            <param name="request"></param>
            <returns></returns>
            <remarks>
                When updating an existing record, call <see cref="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.GetAsset(RequirementsLive.Sdk.Api.Business.Model.GetAsset)" /> first to get the current record,
                then make changes to that instance and call <see cref="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.PutAsset(RequirementsLive.Sdk.Api.Business.Model.PutAsset)" />.
                The system expectation is that this is a complete record.
                Sending a partially filled out object will produce bad data.
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.GetAsset(RequirementsLive.Sdk.Api.Business.Model.GetAsset)">
            <summary>
                Gets an instance of an <see cref="T:RequirementsLive.Sdk.Api.Business.Dto.Asset" /> from the system, if it exists based on the
                <see cref="P:RequirementsLive.Sdk.Api.Business.Model.GetAsset.Criteria" />
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.PutUser(RequirementsLive.Sdk.Api.Business.Model.PutUser)">
            <summary>
                Puts an <see cref="T:RequirementsLive.Sdk.Api.Business.Dto.User" /> into the system.
            </summary>
            <param name="request"></param>
            <returns></returns>
            <remarks>
                When updating an existing record, call <see cref="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.GetUser(RequirementsLive.Sdk.Api.Business.Model.GetUser)" /> first to get the current record,
                then make changes to that instance and call <see cref="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.PutUser(RequirementsLive.Sdk.Api.Business.Model.PutUser)" />.
                The system expectation is that this is a complete record.
                Sending a partially filled out object will produce bad data.
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.GetUser(RequirementsLive.Sdk.Api.Business.Model.GetUser)">
            <summary>
                Gets an instance of an <see cref="T:RequirementsLive.Sdk.Api.Business.Dto.User" /> from the system, if it exists based on the
                <see cref="P:RequirementsLive.Sdk.Api.Business.Model.GetUser.Criteria" />
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.PutOrganization(RequirementsLive.Sdk.Api.Business.Model.PutOrganization)">
            <summary>
                Puts an <see cref="T:RequirementsLive.Sdk.Api.Business.Dto.Organization" /> into the system.
            </summary>
            <param name="request"></param>
            <returns></returns>
            <remarks>
                When updating an existing record, call <see cref="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.GetOrganization(RequirementsLive.Sdk.Api.Business.Model.GetOrganization)" /> first to get the current record,
                then make changes to that instance and call <see cref="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.PutOrganization(RequirementsLive.Sdk.Api.Business.Model.PutOrganization)" />.
                The system expectation is that this is a complete record.
                Sending a partially filled out object will produce bad data.
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.GetOrganization(RequirementsLive.Sdk.Api.Business.Model.GetOrganization)">
            <summary>
                Gets an instance of an <see cref="T:RequirementsLive.Sdk.Api.Business.Dto.Organization" /> from the system, if it exists based on the
                <see cref="P:RequirementsLive.Sdk.Api.Business.Model.GetOrganization.Criteria" />
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.PutLocation(RequirementsLive.Sdk.Api.Business.Model.PutLocation)">
            <summary>
                Puts an <see cref="T:RequirementsLive.Sdk.Api.Business.Dto.Location" /> into the system.
            </summary>
            <param name="request"></param>
            <returns></returns>
            <remarks>
                When updating an existing record, call <see cref="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.GetLocation(RequirementsLive.Sdk.Api.Business.Model.GetLocation)" /> first to get the current record,
                then make changes to that instance and call <see cref="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.PutLocation(RequirementsLive.Sdk.Api.Business.Model.PutLocation)" />.
                The system expectation is that this is a complete record.
                Sending a partially filled out object will produce bad data.
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.GetLocation(RequirementsLive.Sdk.Api.Business.Model.GetLocation)">
            <summary>
                Gets an instance of an <see cref="T:RequirementsLive.Sdk.Api.Business.Dto.Location" /> from the system, if it exists based on the
                <see cref="P:RequirementsLive.Sdk.Api.Business.Model.GetLocation.Criteria" />
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.CountObjects(RequirementsLive.Sdk.Api.Business.Model.CountObjects)">
            <summary>
                Povides a generic way to count objects based on an AppName and a sql filter.
            </summary>
            <param name="request"></param>
            <returns>a response containing the count</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.ListObjects(RequirementsLive.Sdk.Api.Business.Model.ListObjects)">
            <summary>
                Provides a generic way to list the objects based on AppName and a sql filter. Supports paging.
            </summary>
            <param name="request"></param>
            <returns>
                a response containing a list of <see cref="P:RequirementsLive.Sdk.Api.Business.Model.ListObjectsResponse.Properties" /> and
                <see cref="P:RequirementsLive.Sdk.Api.Business.Model.ListObjectsResponse.Items" /> representing data rows.
            </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.PostObject``1(RequirementsLive.Sdk.Api.Business.Model.PostObject)">
            <summary>
                Posts an object to the target <see cref="P:RequirementsLive.Sdk.Api.Business.Model.PostObject.AppName" /> for processing.
                The method returns JSON that will be serialized into an instance of typeof(TResponse)
            </summary>
            <typeparam name="TResponse">A type that can be serialized from a JSON response</typeparam>
            <param name="request">A <see cref="M:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient.PostObject``1(RequirementsLive.Sdk.Api.Business.Model.PostObject)" /> request</param>
            <returns>An instance of TResponse, deserialized from JSON, or null.</returns>
            <remarks>
                Use this method with TResponse of type string to see the raw response.
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.DeleteDictionary">
            <summary>
            Represents the request object for the DeleteDictionary API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.DeleteDictionary.FileName">
            <summary>The dictionary file name to delete.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.DeleteDictionaryResponse">
            <summary>
            Represents the response object for the DeleteDictionary API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetDictionary">
            <summary>
            Represents the request object for the GetDictionary API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetDictionary.FileName">
            <summary>The dictionary file name to download.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetDictionaryResponse">
            <summary>
            Represents the response object for the GetDictionary API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetIndexes">
            <summary>
            Represents the request object for the GetIndexes API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetIndexesResponse">
            <summary>
            Represents the response object for the GetIndexes API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetIndexesResponse.Indexes">
            <summary>
            The script
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListDictionaries">
            <summary>
            Represents the request object for the ListDictionaries API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListDictionariesResponse">
            <summary>
            Response for the ListDictionaries API
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.Model.ListDictionariesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListDictionariesResponse"/> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListDictionariesResponse.Dictionaries">
            <summary>
            List of dictionary file names.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.UploadDictionary">
            <summary>
            Represents the request object for the UploadDictionary API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.UploadDictionary.FileName">
            <summary>
            Name of the file being uploaded.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.UploadDictionaryResponse">
            <summary>
            Response for the UploadDictionary API
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.VerifyPblPage">
            <summary>
            Represents the request object for the Verify API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.VerifyPblPage.PageName">
            <summary>
            The name of the page to verify that already exists on the site.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.VerifyPblPage.PblMarkup">
            <summary>
            PBL markup to be verified.  Use this field when you already have the PBL markup and simply want to verify the markup.
            NOTE: This field will be ignored if the PageName is provided.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.VerifyPblPageResponse">
            <summary>
            Represents the response object for the VerifyPblPage API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.VerifyPblPageResponse.Errors">
            <summary>List of verification errors.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.PblMarkupError">
            <summary>
            Describes the PBL markup error.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblMarkupError.Message">
            <summary>The error message.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblMarkupError.StartIndex">
            <summary>The start index of the PBL fragment.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblMarkupError.Length">
            <summary>The length of the PBL fragment.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetTheme">
            <summary>
             Represents the request object for the GetTheme API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetTheme.StoreId">
            <summary>
            Gets or sets the store id.
            </summary>
            <value>
            The store id.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse">
            <summary>
            Represents the response object for the GetTheme API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.StoreId">
            <summary>
            Gets or sets the store id.
            </summary>
            <value>
            The store id.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.DateUpdated">
            <summary>
            Gets or sets the date updated.
            </summary>
            <value>
            The date updated.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Default">
            <summary>
            Gets or sets the default.
            </summary>
            <value>
            The default.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Offline">
            <summary>
            Gets or sets the offline.
            </summary>
            <value>
            The offline.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Resource">
            <summary>
            Gets or sets the resource.
            </summary>
            <value>
            The resource.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Resource_id">
            <summary>
            Gets or sets the resource id.
            </summary>
            <value>
            The resource id.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Resource_fileId">
            <summary>
            Gets or sets the resource file id.
            </summary>
            <value>
            The resource file id.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Resource_contentType">
            <summary>
            Gets or sets the type of the resource content.
            </summary>
            <value>
            The type of the resource content.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Resource_length">
            <summary>
            Gets or sets the length of the resource.
            </summary>
            <value>
            The length of the resource.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Resource_date">
            <summary>
            Gets or sets the resource date.
            </summary>
            <value>
            The resource date.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Status">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetThemeResponse.Type_Details">
            <summary>
            Gets or sets the type_ details.
            </summary>
            <value>
            The type_ details.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetWorkbookVersion">
            <summary>
            Represents the request object for the GetWorkbookVersion API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetWorkbookVersion.WorkbookName">
            <summary>A name of the Workbook.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetWorkbookVersion.VersionId">
            <summary>The version of the Workbook.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetWorkbookVersionResponse">
            <summary>
            Represents the response object for the GetWorkbookVersion API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetWorkbookVersionResponse.Workbook">
            <summary>
            The raw xml of an app.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPages">
            <summary>
                Represents the request object for the GetPblPages API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPages.AppName">
            <summary>A name of the app, as specified by an @app tag.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPages.IsWorkbook">
            <summary>Indicates that specified name is a workbook.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPagesResponse">
            <summary>
                Represents the response object for the GetPblPages API method
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.Model.GetPblPagesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPagesResponse"/> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPagesResponse.PblPages">
            <summary>
                A list of the Pbl Pages associated with the requested App name.
            </summary>
            <value>
                The PBL pages.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.PblPage">
            <summary>
                Describes the PBL page properties and markup.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPage.PageName">
            <summary>The page name.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPage.PageMarkup">
            <summary>Content of a page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPage.PblMarkupHash">
            <summary>The hash of a markup.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPage.Created">
            <summary>The creation date of a page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPage.Updated">
            <summary>The modification date of a page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPage.UpdateVersion">
            <summary>The version of a page.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListPblTree">
            <summary>
                Represents the request object for the ListPblTree API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblTree.Name">
            <summary>
                Name of the Wiki to serve as the root.  Leave blank for the Home wiki.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblTree.IncludeWorkbooks">
            <summary>
                Indicates whether Workbook names should be returned.  Default = true.
            </summary>
            <remarks>
                Pbl apps may include workbooks as child items.
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListPblTreeResponse">
            <summary>
                Represents the response object for the ListPblTree API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblTreeResponse.Name">
            <summary>
                Name of the Wiki.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblTreeResponse.AppName">
            <summary>
                App name of the Wiki (for Workbooks, this field is blank).
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblTreeResponse.Children">
            <summary>
                Apps (and workbooks) on the Wiki.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.Model.ListPblTreeResponse.WithChild(RequirementsLive.Sdk.Api.Content.Model.PblPageInfo)">
            <summary>
                Method that adds a child.
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListThemes">
            <summary>
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListThemes.PageIndex">
            <summary>
                The page index.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListThemes.PageSize">
            <summary>
                A number of items returned for a single request.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListThemes.Filter">
            <summary>
                Gets or sets the filter.
            </summary>
            <value>
                A filter expression.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListThemesResponse">
            <summary>
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.Model.ListThemesResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListThemesResponse" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListThemesResponse.ThemeList">
            <summary>
                Gets or sets the themes list.
            </summary>
            <value>
                The themes list.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ThemeEntity">
            <summary>
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.Build">
            <summary>
            Represents the request object for the Build API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.Build.Name">
            <summary>
                Gets or sets the name of the workbook to build.
            </summary>
            <remarks>
                This should be the name of the workbook, and NOT the name used in the @app tag.
                <para>
                    For multi-page workbooks/apps, this should be the name of the root page.
                </para>
                <para>
                    To build the home page, specify a null value for the name.
                </para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.Build.Force">
            <summary>
                This forces a download of all wikis during the build step. Can only control this when building the home wiki.
            </summary>
            <value>
                <c>true</c> if force; otherwise, <c>false</c>.
            </value>
            <remarks>
                When you build an app, it marks the wiki as processed. When you edit a wiki in the ide, it clears the processed
                flag. The build process will download wikis into a folder used during the build process.
                The force parameter make it re-download wikis whether or not they've been marked as processed if it's set to true.
                <para>
                    If set to false, it only downloads wikis not previously processed by the build since the last time it was
                    saved.
                </para>
                <param>
                    If the Name parameter is specified, the Force flag is ignored. It will always be false.
                </param>
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.BuildResponse">
            <summary>
            Represents the response object for the Build API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.BuildResponse.TaskId">
            <summary>
            The task id representing the build request.
            </summary>
            <remarks>A status of the Build task can be checked with the <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetTask" /> method.</remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.DeleteMedia">
            <summary>
            Represents the request object for the DeleteMedia API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.DeleteMedia.StoreId">
            <summary>The store id of the media item.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.DeleteMediaResponse">
            <summary>
            Represents the response object for the DeleteMedia API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.DeleteMediaResponse.StoreId">
            <summary>The store id of the deleted media item.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetAppMap">
            <summary>
            Represents the request object for the GetAppMap API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetAppMapResponse">
            <summary>
            Represents the response object for the GetAppMap API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetAppMapResponse.Map">
            <summary>A map of the relationships between all apps.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetTranslationResources">
            <summary>
            Represents the request object for the GetTranslationResources API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetTranslationResourcesResponse">
            <summary>
            Represents the response object for the GetTranslationResources API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListTranslationResources">
            <summary>
                Represents the request object for the ListTranslationResources API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListTranslationResourcesResponse">
            <summary>
                Represents the response object for the ListTranslationResources API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListTranslationResourcesResponse.TranslationResourceFiles">
            <summary>A list of <see cref="T:System.IO.FileInfo" /> objects describing media items.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListWorkbookVersions">
            <summary>
                Represents the request object for the ListPblPageVersions API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListWorkbookVersions.WorkbookName">
            <summary>A name of the Workbook.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListWorkbookVersionsResponse">
            <summary>
                Represents the response object for the ListWorkbookVersions API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListWorkbookVersionsResponse.Versions">
            <summary>A list of workbook versions.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.PutTheme">
            <summary>
                Represents the request object for the Theme API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.StoreId">
            <summary>
                Gets or sets the store id.
            </summary>
            <value>
                The store id.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.Default">
            <summary>
                Gets or sets the default.
            </summary>
            <value>
                The default.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.Offline">
            <summary>
                Gets or sets the offline.
            </summary>
            <value>
                The offline.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.Resource">
            <summary>
                Gets or sets the resource.
            </summary>
            <value>
                The resource.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.ResourceId">
            <summary>
                Gets or sets the resource id.
            </summary>
            <value>
                The resource id.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.ResourceFileId">
            <summary>
                Gets or sets the resource file id.
            </summary>
            <value>
                The resource file id.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.ResourceContentType">
            <summary>
                Gets or sets the type of the resource content.
            </summary>
            <value>
                The type of the resource content.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.ResourceLength">
            <summary>
                Gets or sets the length of the resource.
            </summary>
            <value>
                The length of the resource.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.ResourceDate">
            <summary>
                Gets or sets the resource date.
            </summary>
            <value>
                The resource date.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.Status">
            <summary>
                Gets or sets the status.
            </summary>
            <value>
                The status.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.Code">
            <summary>
                Gets or sets the code.
            </summary>
            <value>
                The code.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.Type">
            <summary>
                Gets or sets the type.
            </summary>
            <value>
                The type.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTheme.Type_Details">
            <summary>
                Gets or sets the type_ details.
            </summary>
            <value>
                The type_ details.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.PutThemeResponse">
            <summary>
                Represents the response object for the Theme API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutThemeResponse.StoreId">
            <summary>
                The StoreId for the Theme that was updated, or the new StoreId if a new store was created.
            </summary>
            <value>
                The store identifier.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutThemeResponse.DateUpdated">
            <summary>The modification date of the page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutTranslationResourcesResponse.Success">
            <summary>Success</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetMedia">
            <summary>
            Represents the request object for the GetMedia API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetMedia.StoreId">
            <summary>The store id of the media item.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetMediaResponse">
            <summary>
            Represents the response object for the GetMedia API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetTask">
            <summary>
            Represents the request object for the GetTask API method.
            </summary>
            <remarks>The task is initiated by calling the <see cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.Build(System.String)"/> method.</remarks>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.Build(System.String)"/>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetTask.StoreId">
            <summary>The task id.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetTaskResponse">
            <summary>
            Represents the response object for the GetTask API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetTaskResponse.Type">
            <summary>Task type.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetTaskResponse.Arguments">
            <summary>Task arguments.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetTaskResponse.User">
            <summary>The id of the user who executed the task.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetTaskResponse.Status">
            <summary>A status of the task.</summary>
            <remarks>
                Possible Status values are:
                Cancelled, Cancelling, Completed, Failed, Queued, Running, AcquiringLock, LockAcquired, ReleasingLock,
                LockReleased, Deferring, Deferred, FailedQueueing.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetTaskResponse.Error">
            <summary>An error message generated by the task.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPage">
            <summary>
                Represents the request object for the GetPblPage API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPage.PageName">
            <summary>A name of the PBL page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPage.OmitVersionId">
            <summary>
                Gets or sets a value indicating whether the response should omit version identifier.
            </summary>
            <value>
                <c>true</c> if [omit version identifier]; otherwise, <c>false</c>.
            </value>
            <remarks>
                Sometimes the version Id is not needed and it will increase performance not to perform the lookup for this value.
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.PblPageWorkflowInfo">
            <summary>
                Represents a workflow associated with a Pbl page.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPageWorkflowInfo.Xml">
            <summary>
                The XML from the workflow diagraming tool.
            </summary>
            <value>
                The XML.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPageResponse">
            <summary>
                Represents the response object for the GetPblPage API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPageResponse.PblMarkup">
            <summary>The contents of the PBL page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPageResponse.PblMarkupHash">
            <summary>The hash of a markup.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPageResponse.VersionId">
            <summary>The latest version id of a page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPageResponse.Modified">
            <summary>The modification date of a page.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPageVersion">
            <summary>
            Represents the request object for the GetPblPageVersion API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPageVersion.PageName">
            <summary>A name of the PBL page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPageVersion.VersionId">
            <summary>The version id of the PBL page.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPageVersionResponse">
            <summary>
            Represents the response object for the GetPblPageVersion API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetPblPageVersionResponse.PblMarkup">
            <summary>The contents of the PBL page.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetWorkbook">
            <summary>
            Represents the request object for the GetWorkbook API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetWorkbook.WorkbookName">
            <summary>
            A name of an app.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetWorkbookResponse">
            <summary>
            Represents the response object for the GetWorkbook API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetWorkbookResponse.Workbook">
            <summary>
            The raw xml of an app.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListMedia">
            <summary>
            Represents the request object for the ListMedia API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListMedia.StoreId">
            <summary>The store id of the media item.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListMedia.Name">
            <summary>A name of the media item.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListMedia.Category">
            <summary>The media item category.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListMediaResponse">
            <summary>
            Represents the response object for the ListMedia API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListMediaResponse.Media">
            <summary>A list of <see cref="T:RequirementsLive.Sdk.Api.Content.Model.MediaInfo"/> objects describing media items.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.MediaInfo.StoreId">
            <summary>The store id of the media item.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.MediaInfo.Name">
            <summary>A name of the media item.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.MediaInfo.Category">
            <summary>The media item category.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.MediaInfo.Date">
            <summary>The modification date of the media item.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.MediaInfo.Status">
            <summary>The media item status.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.MediaInfo.Size">
            <summary>The size of the media item.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPages">
            <summary>
                Represents the request object for the ListPblPages API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblPages.PageIndex">
            <summary> The page index.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblPages.PageSize">
            <summary> A number of items returned for a single request.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblPages.OmitVersionIds">
            <summary> Specifies whether to omit Version IDs from a response. </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblPages.IncludePblMarkup">
            <summary>
                Specifies whether to include the pbl markup in the response
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPagesResponse">
            <summary>
                Represents the response object for the ListPblPages API method
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.Model.ListPblPagesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPagesResponse"/> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblPagesResponse.PblPages">
            <summary>
                A list containing info about the Pbl Pages.
            </summary>
            <value>
                The PBL pages info.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.PblPageInfo">
            <summary>
                Describes the PBL page properties.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPageInfo.PageName">
            <summary>The page name.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPageInfo.AppName">
            <summary>The app name.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPageInfo.Status">
            <summary>A status of a page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPageInfo.StoreId">
            <summary>The store id.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPageInfo.Modified">
            <summary>The modification date of a page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPageInfo.VersionId">
            <summary>The latest version id of a page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPageInfo.WikiType">
            <summary>
                The type of the wiki: App or Workbook, or null if part of the response from the ListPblPages API.
            </summary>
            <value>
                App or Workbook, or null if ListPblPages API is used.
            </value>
            <remarks>
                This type is used by more than 1 API, and has a slight difference in behavior depending on which API is used.
                This property is assigned a value when part of the result of the <seealso cref="T:RequirementsLive.Sdk.Api.Content.Model.ListPblTree" /> API
                method, but will have no value when part of the response from the <seealso cref="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPages" /> API.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPageInfo.PblMarkupHash">
            <summary>The hash of a markup.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PblPageInfo.PblMarkup">
            <summary>
                The PBL markup.
            </summary>
            <value>
                The PBL markup.
            </value>
            <remarks>
                In order for this value to be set, the IncludePblMarkup flag must be set in the call to the
                <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPages" /> API
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.PblPageInfoComparer">
            <summary>
                Default equality comparer for PblWikiInfo
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.Model.PblPageInfoComparer.Equals(RequirementsLive.Sdk.Api.Content.Model.PblPageInfo,RequirementsLive.Sdk.Api.Content.Model.PblPageInfo)">
            <summary>
                Default override of Equals function.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.Model.PblPageInfoComparer.GetHashCode(RequirementsLive.Sdk.Api.Content.Model.PblPageInfo)">
            <summary>
                Default override of GetHashCode function.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPageVersions">
            <summary>
                Represents the request object for the ListPblPageVersions API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblPageVersions.PageName">
            <summary>A name of the PBL page.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPageVersionsResponse">
            <summary>
                Represents the response object for the ListPblPageVersions API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblPageVersionsResponse.VersionIds">
            <summary>A list of page version ids.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblPageVersionsResponse.ModificationDates">
            <summary>A list of page modification dates.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblPageVersionsResponse.UserIds">
            <summary>A list of user ids who modified the page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListPblPageVersionsResponse.Users">
            <summary>A list of users who modified the page.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.PutMedia">
            <summary>
            Represents the request object for the PutMedia API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutMedia.StoreId">
            <summary>The store id of the media item.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutMedia.Name">
            <summary>A name of the media item.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutMedia.Category">
            <summary>The media item category.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.PutMediaResponse">
            <summary>
            Represents the response object for the PutMedia API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutMediaResponse.StoreId">
            <summary>The store id of the media item.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.PutPblPage">
            <summary>
                Represents the request object for the PutPblPage API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutPblPage.PageName">
            <summary>A name of the PBL page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutPblPage.PblMarkup">
            <summary>The contents of the PBL page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutPblPage.ControlPblMarkupHash">
            <summary>The control hash of a markup. The page markup should have the same hash as provided control hash.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.PutPblPageResponse">
            <summary>
                Represents the response object for the PutPblPage API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutPblPageResponse.DateUpdated">
            <summary>The modification date of the page.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.PutPblPageResponse.PblMarkupHash">
            <summary>The hash of a markup.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetApp">
            <summary>
            Represents the request object for the GetApp API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetApp.AppName">
            <summary>
            The name of the app, as specified by an @app tag in the Pbl
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.GetAppResponse">
            <summary>
            Represents the response object for the GetApp API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetAppResponse.AppName">
            <summary>
             The name of the app.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetAppResponse.Entities">
            <summary>
            A list of <see cref="T:RequirementsLive.Sdk.Api.Content.Model.EntityInfo"/> objects describing entities of the app.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetAppResponse.Views">
            <summary>
             A list of <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ViewInfo"/> objects describing views of the app.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.GetAppResponse.Queues">
            <summary>
             A list of <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ViewInfo"/> objects describing queues of the app.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.EntityInfo">
            <summary>
            Represents the entity of an app.
            </summary>
            <remarks>An entity is a named collection of properties for an app. These properties are values are taken directly out of or calculated from one or more properties of an app. Entities are important to many features of the platform such as queues and lookups. Essentially data tables, entities can be filtered and sorted when queried.</remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ViewInfo">
            <summary>
            Represents the view of an app.
            </summary>
            <remarks>A view is a means of presenting or collecting data to end-users in the user interface. It is defined within an app and can be of type Form or Workbook.</remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListApps">
            <summary>
            Represents the request object for the ListApps API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.ListAppsResponse">
            <summary>
            Represents the response object for the ListApps API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Content.Model.ListAppsResponse.AppNames">
            <summary>
            A list of apps.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.Model.NamespaceDoc">
            <summary>
            Contains the types used when communicating with platform content services.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.RqlContentApiClient">
            <summary>
            Gets the theme by store Id
            </summary>
            <summary>
                Creates or updates a Theme.
            </summary>
            <summary>
            Represents the content API service client. 
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.DeleteDictionary(System.String)">
            <summary>Deletes a dictionary file.</summary>
            <param name="fileName">The dictionary file name to delete.</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.DeleteDictionary(RequirementsLive.Sdk.Api.Content.Model.DeleteDictionary)">
            <summary>Deletes a dictionary file.</summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.DeleteDictionary"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.DeleteDictionaryResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetDictionary(System.String)">
            <summary>
            Gets a dictionary file.
            </summary>
            <param name="fileName">The file name to download.</param>
            <returns>A binary stream.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetIndexes(System.String)">
            <summary>
            Gets the site indexes.
            </summary>
            <param name="pageName">A site name.</param>
            <returns>The indexes.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetIndexes(RequirementsLive.Sdk.Api.Content.Model.GetIndexes)">
            <summary>
            Gets the site indexes.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetIndexes"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetIndexesResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListDictionaries">
            <summary>
            Lists dictionary files.
            </summary>
            <returns>A list of dictionary file names.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListDictionaries(RequirementsLive.Sdk.Api.Content.Model.ListDictionaries)">
            <summary>
            Lists the dictionary files.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListDictionaries"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListDictionariesResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.UploadDictionary(System.String)">
            <summary>
            Uploads a dictionary file.
            </summary>
            <returns>A list of dictionary file names.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.UploadDictionary(RequirementsLive.Sdk.Api.Content.Model.UploadDictionary,System.IO.Stream)">
            <summary>
            Uploads a dictionary file.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.UploadDictionary"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.UploadDictionaryResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.VerifyPblPage(RequirementsLive.Sdk.Api.Content.Model.VerifyPblPage)">
            <summary>
            Verifies the specified PBL page or wiki text
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.VerifyPblPage"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.VerifyPblPageResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetTheme(RequirementsLive.Sdk.Api.Content.Model.GetTheme)">
            <summary>
            Gets the theme.
            </summary>
            <param name="request">The request.</param>
            <returns>GetThemeResponse object</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetWorkbookVersion(System.String,System.String)">
            <summary>
            Get Workbook Version
            </summary>
            <param name="workbookName">A name and version of the workbook.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListWorkbookVersionsResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetWorkbookVersion(RequirementsLive.Sdk.Api.Content.Model.GetWorkbookVersion)">
            <summary>
            Gets the version of the workbook.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListWorkbookVersions"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListWorkbookVersionsResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetPblPages(System.String)">
            <summary>
                Gets the PBL pages for the specified App name
            </summary>
            <param name="appName">Name of the application, as specified by an @app tag.</param>
            <returns></returns>
            <remarks>
                This does not return a result if a workbook name is given instead of an App Name.
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetPblPages(RequirementsLive.Sdk.Api.Content.Model.GetPblPages)">
            <summary>
                Get PBL pages.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPages" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPagesResponse" /> object.</returns>
            <remarks>
                This does not return a result if a workbook name is given instead of an App Name and IsWorkbook is not set to true.
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListPblTree(RequirementsLive.Sdk.Api.Content.Model.ListPblTree)">
            <summary>
                Lists the Children Apps (and workbooks) on the specified Wiki/Root Page
            </summary>
            <param name="request">The ListPblTree request</param>
            <returns>The ListPblTree response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListPblTree(System.String)">
            <summary>
                Lists the Children associated with a Pbl page based on the specified wiki page name.
            </summary>
            <param name="name">Leave bank to signify the Home wiki.  Note:  IncludeWorkbooks will be defaulted to True.</param>
            <returns></returns>
            <remarks>
                This version of the API will default IncludeWorkbooks to true, resulting in a list of children that are apps or
                wikis
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListThemes(RequirementsLive.Sdk.Api.Content.Model.ListThemes)">
            <summary>
                Lists site themes.
            </summary>
            <param name="request">A <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListThemes" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListThemesResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.BuildAll">
            <summary >
            Builds all workbooks on the home wiki.
            </summary>
            <returns>The task id.</returns>
            <remarks>A status of the task can be checked with the <see cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetTask(System.String)" /> method.</remarks>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetTask(System.String)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.Build(System.String)">
            <overloads>Requests a build of all workbooks or an individual workbook and returns the task id.</overloads>
            <summary>
            Builds an individual workbook and returns the task id.
            </summary>
            <param name="name">The name of a workbook.</param>
            <returns>A <see cref="T:RequirementsLive.Sdk.Api.Content.Model.BuildResponse"/> object.</returns>
            <remarks>A status of the task can be checked with the <see cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetTask(System.String)" /> method.</remarks>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetTask(System.String)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.Build(RequirementsLive.Sdk.Api.Content.Model.Build)">
            <summary>
            Requests a build of all workbooks or an individual workbook and returns the task id.
            </summary>
            <param name="request">A <see cref="T:RequirementsLive.Sdk.Api.Content.Model.Build"/> request object.</param>
            <returns>A <see cref="T:RequirementsLive.Sdk.Api.Content.Model.BuildResponse"/> object.</returns>
            <remarks>A status of the task can be checked with the <see cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetTask(System.String)" /> method.</remarks>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetTask(System.String)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.DeleteMedia(System.String)">
            <overloads>Deletes a media file.</overloads>
            <summary>Deletes a media file.</summary>
            <param name="storeId">The store id of the media item.</param>
            <returns>The id of the deleted media item.</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListMedia(System.String,System.String,System.String)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.DeleteMedia(RequirementsLive.Sdk.Api.Content.Model.DeleteMedia)">
            <summary>Deletes a media file.</summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.DeleteMedia"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.DeleteMediaResponse"/> object.</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListMedia(System.String,System.String,System.String)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetAppMap">
            <summary>Gets a map of the relationships between all apps.</summary>
            <returns>A map of the relationships between all apps.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetAppMap(RequirementsLive.Sdk.Api.Content.Model.GetAppMap)">
            <summary>Gets map of the relationships between all apps.</summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetAppMap"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetAppMapResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetTranslationResources(RequirementsLive.Sdk.Api.Content.Model.GetTranslationResources)">
            <summary>
            Gets translation resource files as a zipped stream.
            </summary>
            <param name="request">list of translation resource files.</param>
            <returns>A binary stream.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListTranslationResources(RequirementsLive.Sdk.Api.Content.Model.ListTranslationResources)">
            <summary>
                Lists the translation resources files.
            </summary>
            <param name="request">A <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListTranslationResources" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListTranslationResourcesResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListWorkbookVersions(System.String)">
            <summary>
                Lists the versions of the workbook.
            </summary>
            <param name="workbookName">A name of the workbook.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListWorkbookVersionsResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListWorkbookVersions(RequirementsLive.Sdk.Api.Content.Model.ListWorkbookVersions)">
            <summary>
                Lists the versions of the workbook.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListWorkbookVersions" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListWorkbookVersionsResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.PutTheme(RequirementsLive.Sdk.Api.Content.Model.PutTheme)">
            <summary>
                Creates or updates a Theme.
            </summary>
            <param name="request">The request.</param>
            <returns>PutThemeResponse object</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.PutTranslationResources(RequirementsLive.Sdk.Api.Content.Model.PutTranslationResources)">
            <summary>
                Lists the translation resources files.
            </summary>
            <param name="request">A <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListTranslationResources" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListTranslationResourcesResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetMedia(System.String)">
            <summary>
            Gets a media file.
            </summary>
            <param name="storeId">The store id of the media item.</param>
            <returns>A binary stream.</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListMedia(System.String,System.String,System.String)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetTask(System.String)">
            <overloads>Gets the status of the <see cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.Build(System.String)"/> task.</overloads>
            <summary>Gets the status of the <see cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.Build(System.String)"/> task.</summary>
            <param name="storeId">The task id.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetTaskResponse"/> object.</returns>
            <remarks>The build task is initiated by calling the <see cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.Build(System.String)"/> method.</remarks>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.Build(System.String)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetTask(RequirementsLive.Sdk.Api.Content.Model.GetTask)">
            <summary>Gets the status of the <see cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.Build(System.String)"/> task.</summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetTask"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetTaskResponse"/> object.</returns>
            <remarks>The build task is initiated by calling the <see cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.Build(System.String)"/> method.</remarks>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.Build(System.String)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetPblPage(System.String)">
            <summary>
            Gets the PBL page.
            </summary>
            <param name="pageName">A name of the PBL page.</param>
            <returns>The contents of the PBL page.</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListPblPages(RequirementsLive.Sdk.Api.Content.Model.ListPblPages)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetPblPage(RequirementsLive.Sdk.Api.Content.Model.GetPblPage)">
            <summary>
            Gets the PBL page.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPage"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPageResponse"/> object.</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListPblPages(RequirementsLive.Sdk.Api.Content.Model.ListPblPages)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetPblPageVersion(System.String,System.String)">
            <summary>
            Gets a specific version of a the PBL page.
            </summary>
            <param name="pageName">A name of the PBL page.</param>
            <param name="versionId">The version id of the PBL page.</param>
            <returns>The contents of the PBL page.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetPblPageVersion(RequirementsLive.Sdk.Api.Content.Model.GetPblPageVersion)">
            <summary>
            Gets a specific version of a the PBL page.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPageVersion"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetPblPageVersionResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetWorkbook(System.String)">
            <summary>
            Gets the raw xml of an app.
            </summary>
            <param name="workbookName">A name of an app.</param>
            <returns>The raw xml of an app.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetWorkbook(RequirementsLive.Sdk.Api.Content.Model.GetWorkbook)">
            <summary>
            Gets the raw xml of an app.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetWorkbook"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetWorkbookResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListMedia(System.String,System.String,System.String)">
            <summary>
            Lists the media files.
            </summary>
            <param name="name">The media item name.</param>
            <param name="category">The media item category.</param>
            <param name="id">The store id of the media item.</param>
            <returns>A list of matching media items.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListMedia(RequirementsLive.Sdk.Api.Content.Model.ListMedia)">
            <summary>
            Lists the media files.
            </summary>
            <param name="request">A <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListMedia"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListMediaResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListPblPages(RequirementsLive.Sdk.Api.Content.Model.ListPblPages)">
            <summary>
                Lists PBL pages.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPages" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPagesResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListPblPageVersions(System.String)">
            <summary>
                Lists the versions of the PBL page.
            </summary>
            <param name="pageName">A name of the PBL page.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPageVersionsResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListPblPageVersions(RequirementsLive.Sdk.Api.Content.Model.ListPblPageVersions)">
            <summary>
                Lists the versions of the PBL page.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPageVersions" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListPblPageVersionsResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.PutMedia(System.String,System.String,System.String,System.String)">
            <summary>
            Creates or updates a media file.
            </summary>
            <param name="storeId">The store id of the media item.</param>
            <param name="name">A name of the media item.</param>
            <param name="category">The media item category.</param>
            <param name="filePath">A full path to the media file to upload.</param>
            <returns>The store id of a new or modified media item.</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListMedia(System.String,System.String,System.String)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.PutPblPage(System.String,System.String)">
            <summary>
                Creates or updates a PBL page.
            </summary>
            <param name="pageName">A name of the PBL page.</param>
            <param name="pblMarkup">The contents of the PBL page.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.PutPblPageResponse" /> object.</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListPblPages(RequirementsLive.Sdk.Api.Content.Model.ListPblPages)" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.PutPblPage(RequirementsLive.Sdk.Api.Content.Model.PutPblPage)">
            <summary>
                Creates or updates a PBL page.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.PutPblPage" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.PutPblPageResponse" /> object.</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListPblPages(RequirementsLive.Sdk.Api.Content.Model.ListPblPages)" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetApp(System.String)">
            <summary>
                Gets the properties, views, and entities of an app.
            </summary>
            <param name="appName">A name of the app, as specified with an @app tag in the Pbl.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetAppResponse"/> object.</returns>
            <example>
                This example demonstrates the usage of the GetApp API in the context of an NUnit Unit Test.
            <code>
                var contentApi = new RqlContentApiClient("yoursite.requirementslive.com");
                contentApi.Authenticate("username_with_api_access", "password");
            
                const string TestAppName = "My_App";
            
                GetAppResponse response = contentApi.GetApp(TestAppName);
            
                Assert.IsNotNull(response.Entities);
                CollectionAssert.IsNotEmpty(response.Entities, "The Entities collection for app '{0}' was empty", TestAppName);
            
                Assert.IsNotNull(response.Queues);
                CollectionAssert.IsNotEmpty(response.Queues, "The Queues collection for app '{0}' was empty", TestAppName);
            
                Assert.IsNotNull(response.Views);
                CollectionAssert.IsNotEmpty(response.Views, "The Views collection for app '{0}' was empty", TestAppName);
            
                Assert.AreEqual(TestAppName, response.AppName,
                    "contentApiClient.GetApp('{0}') returned info for the wrong app: {1}", TestAppName, response.AppName);
            </code>
            </example>
            <exception cref="T:ServiceStack.ServiceClient.Web.WebServiceException">This exception is thrown if the app name is not valid.</exception>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetApp(RequirementsLive.Sdk.Api.Content.Model.GetApp)">
            <summary>
            Gets the properties, views, and entities of an app.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetApp" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.GetAppResponse"/> object.</returns>
            <example>
            This example demonstrates the usage of the GetApp API in the context of an NUnit Unit Test.
            <code>
                var contentApi = new RqlContentApiClient("yoursite.requirementslive.com");
                contentApi.Authenticate("username_with_api_access", "password");
            
                const string TestAppName = "My_App";
            
                GetAppResponse response = contentApi.GetApp(new GetApp {AppName = TestAppName});
            
                Assert.IsNotNull(response.Entities);
                CollectionAssert.IsNotEmpty(response.Entities, "The Entities collection for app '{0}' was empty", TestAppName);
            
                Assert.IsNotNull(response.Queues);
                CollectionAssert.IsNotEmpty(response.Queues, "The Queues collection for app '{0}' was empty", TestAppName);
            
                Assert.IsNotNull(response.Views);
                CollectionAssert.IsNotEmpty(response.Views, "The Views collection for app '{0}' was empty", TestAppName);
            
                Assert.AreEqual(TestAppName, response.AppName,
                    "contentApiClient.GetApp('{0}') returned info for the wrong app: {1}", TestAppName, response.AppName);
            </code>
            </example>
            <exception cref="T:ServiceStack.ServiceClient.Web.WebServiceException">This exception is thrown if the app name is not valid.</exception>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListApps">
            <summary>
            Lists the apps.
            </summary>
            <returns>A list of apps.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.ListApps(RequirementsLive.Sdk.Api.Content.Model.ListApps)">
            <summary>
            Lists the apps.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListApps"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Content.Model.ListAppsResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Content.RqlContentApiClient"/> class.
            </summary>
            <param name="site">The site.</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.#ctor(RequirementsLive.Sdk.Api.Content.RqlContentApiClientConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Content.RqlContentApiClient"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.RqlContentApiClientConfiguration">
            <summary>
            Represents the content API service client configuration.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Content.NamespaceDoc">
            <summary>
            Contains the types used to configure and invoke platform content services.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CountEntities">
            <summary>
            Represents the request object for the CountEntities API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountEntities.AppName">
            <summary>
            The name of the app being queried
            </summary>        
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountEntities.Entity">
            <summary>
            The Entity name being queried, such as List
            </summary>        
            <remarks>
            If this is null or empty, List is assumed.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountEntities.Filter">
            <summary>
                A Sql queue filter
            </summary>
            <value>
                The queue filter.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountEntities.ContextStoreId">
            <summary>
                This contains a store Id that is used as the Context Store while performing the entity query
            </summary>
            <remarks>
                <para>
                    This is required in cases where the entity is an
                    Analyze Queue that has a filter that has a dependency on a specific store id.
                    If the wrong store is the context store, queries will return 0 stores.
                </para>
                <para>
                    Any expressions on filters on the @queue-filter or @query-filter that depend on store context will use this
                    store as the current store.
                </para>
                Example: @query-filter "StoreId = {{store-id()}}"
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CountEntitiesResponse">
            <summary>
            Represents the response object for the CountEntities API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountEntitiesResponse.Count">
            <summary>
            The Count of stores found by the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.CountEntities"/> request
            </summary>        
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.DeleteInvalidStores">
            <summary>
                Represents the request object for the DeleteInvalidStores API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.DeleteInvalidStores.AppName">
            <summary>
                The app name associated with this query.  Leave it as null to for invalid stores across all apps.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.DeleteInvalidStoresResponse">
            <summary>
                Represents the response object for the DeleteInvalidStores API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.DeleteInvalidStoresResponse.NumberDeleted">
            <summary>
                The count of invalid stores found based on the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.DeleteInvalidStores" /> request.
            </summary>
            <value>
                The number of invalid stores that were deleted.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CountQueueData">
            <summary>
                Represents the request object for the CountQueueData API method.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.CountQueueData.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.CountQueueData" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountQueueData.QueueName">
            <summary>
                Name of the queue.  Should be in the form of AppName.QueueName
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountQueueData.Filter">
            <summary>
                Queue filter.  Optional
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountQueueData.ContextStoreId">
            <summary>
                If the results are evaluated in the context of another store (e.g. queue in scope), indicate the store Id.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CountQueueDataResponse">
            <summary>
                Represents the response object for the CountQueueData API method.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.CountQueueDataResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.CountQueueDataResponse"/> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountQueueDataResponse.Count">
            <summary>
            Result of the query.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CountStores">
            <summary>
                Represents the request object for the CountStores API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountStores.AppId">
            <summary>
                Optional parameter to narrow down values by App
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountStores.Archived">
            <summary>
                If not null, will apply a filter on the query for stores on whether or not the Archive column is set to true or
                false accordingly.  Leave null to exclude this from the filter.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountStores.Shadow">
            <summary>
                If not null, will apply a filter on the query for stores on whether or not the Shadow column is set to true or
                false accordingly.  Leave null to exclude this from the filter.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountStores.Filter">
            <summary>
                This is an additional filter which may be applied to the query.
            </summary>
            <value>
                The filter.
            </value>
            <remarks>
                This filter is optional.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountStores.StartDateTime">
            <summary>
                The start date time range for this search.
            </summary>
            <remarks>
                If specified, the query for store ids will search only those record updated BEFORE this timestamp.
                Is compared to the DateUpdated column in the database.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountStores.EndDateTime">
            <summary>
                The end date time range for this search.
            </summary>
            <value>
                The end date time.
            </value>
            <remarks>
                If specified, the query for store ids will search only those record updated BEFORE this timestamp.
                Is compared to the DateUpdated column in the database.
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CountStoresResponse">
            <summary>
                Represents the response object for the ListTransactions API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountStoresResponse.Count">
            <summary>
                The count of stores that matched the query specified by the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.CountStores" /> request
            </summary>
            <value>
                The number of stores.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CreateLoginToken">
            <summary>
                The CreateLoginToken API Request object
            </summary>
            <seealso
                cref="!:RequirementsLive.Sdk.Api.Model.SecureApiRequest&lt;RequirementsLive.Sdk.Api.Data.Model.CreateLoginTokenResponse&gt;" />
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CreateLoginToken.UserId">
            <summary>
                The store id of the user for which a login token is being created for.
            </summary>
            <value>
                The user store identifier.
            </value>
            <remarks>
                The user id must be valid or any exception is raised
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CreateLoginToken.TargetUrl">
            <summary>
                The target URL the user will be redirected to upon login w/ this token.
            </summary>
            <value>
                The target URL.
            </value>
            <remarks>
                The TargetUrl is optional in this API call. If not specified here, the default landing page from Site Configuration
                will be used.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CreateLoginToken.ReauthUrl">
            <summary>
                The reauthentication URL the user will be redirected to when the session expires, or if the login token is no
                longer valid.
            </summary>
            <value>
                The reauth URL.
            </value>
            <remarks>
                The ReauthUrl is optional in this API call. If not specified here, the default Reathorization Url from Site
                Configuration will be used.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CreateLoginToken.SessionDurationInMinutes">
            <summary>
                Specifies the duration of the login session, once they login
            </summary>
            <value>
                The session duration in minutes.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CreateLoginTokenResponse">
            <summary>
                The CreateLoginToken API Response object
            </summary>
            <seealso cref="T:RequirementsLive.Sdk.Api.Model.SecureApiResponse" />
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CreateLoginTokenResponse.TokenKey">
            <summary>
                This is the TokenKey result. It may be used to login via the Token Authorization (TAuth) endpoint.
            </summary>
            <value>
                The token key.
            </value>
            <remarks>
                Login Tokens are only valid for about 10 seconds.
                <para>
                    The token may be used w/ the following url:  http://sitename.com/rql/TAuth/{TokenKey}
                </para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CreateLoginTokenResponse.TokenLoginUrl">
            <summary>
            This is the token login url.  Redirect to this URL to consume the token and log the user in and have it redirect to the appropriate target url.
            </summary>
            <value>
            The token login URL.
            </value>
            <remarks>
            <para>
            Redirect to this URL to consume the token and log the user in and have it redirect to the appropriate target url.
            </para>
            <para>
            The token login url will be: https://sitename.com/rql/TAuth/{TokenKey}
            </para>
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.EndTransactionsBatch">
            <summary>
                Represents the request object for the EndTransactionsBatch API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.EndTransactionsBatchResponse">
            <summary>
                Represents the response object for the EndTransactionsBatch API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRule.StoreXml">
            <summary>
                The store XML that the rule will be applied to. The changed version of this store will be returned
                in the result along with the transactions applied to the store.
            </summary>
            <value>
                The store XML.
            </value>
            <remarks>
                <para>This is a REQUIRED property</para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRule.RuleXml">
            <summary>
                This is the Store XML containing the rule details.
            </summary>
            <value>
                The store XML containing the rule.
            </value>
            <remarks>
                The rule contains conditions and actions, and may contain a reference to the rule set or collection of rules that
                the rule may belong to.
                <para>
                    If a reference to a rule set is specified that rule set will be loaded and the rule will execute under
                    that context. 
                    If there is no reference to a rule set in the rule xml, then a default rule set properties will be used.
                    Typically, the rule set properties don't matter so much because this is executing only 1 test in isolation from
                    other tests.
            
                    The reference to the rule set is usually the result of a @lookup tag.  
                    The following XPath should resolve to the storeId of the referenced rule set: /store/*[1]/Rule_Set/@refId
                </para>
                <para>This is a REQUIRED property</para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRuleResponse.StoreXml">
            <summary>
                This is the store Xml AFTER the Rule Engine has applied the rule to it.
            </summary>
            <value>
                The store XML.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRuleResponse.Transactions">
            <summary>
                This is the list of transactions that were applied to the store when the rule was applied.
            </summary>
            <value>
                The transactions.
            </value>
            <remarks>
                Rule State is included in the transactions as a comment.  Rule State indicates if a rule was executed or not, or
                evaluated as true or false, etc.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRules.StoreXml">
            <summary>
                The store XML that the rule or rule set(s) will be applied to. The changed version of this store will be returned
                in the result along with the transactions applied to the store.
            </summary>
            <value>
                The store XML.
            </value>
            <remarks>
                <para>This is a REQUIRED property</para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRules.RuleSetQueueName">
            <summary>
                The name of the queue containing Rule Sets
            </summary>
            <value>
                The name of the rule set queue.
            </value>
            <remarks>
                example value:  Rule_Sets_Library.Active_Rule_Sets        
                <para>
                    If no filter is specified in the <see cref="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRules.RuleSetQueueFilter" />, then all rule sets are loaded.
                </para>        
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRules.RuleSetQueueFilter">
            <summary>
                A SQL filter to specify which rule set name to load.
            </summary>
            <value>
                The rule set queue filter.
            </value>
            <remarks>
                example value: Rule_Set_Name = 'MyRuleSet1'
                <para>
                    Leave this as an empty string if you want all this to apply to all the resets in the specified rule set queue
                </para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRules.RulesQueueName">
            <summary>
                The queue containing the collection of rules that this rule belongs to.
            </summary>
            <value>
                The name of the rules queue.
            </value>
            <remarks>
                Example value:  Rules_Library.Active_Rules
                <para>
                    Each Rule store contains a lookup to the parent.  If the relationship between the Rules Queue and
                    the Rule Set Queue is wrong, no rules are loaded and nothing happens to the target store.
                </para>
                <para>
                    The queue specified here must have a published column named Rule_Set and which has values linked to the queue
                    specified in <see cref="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRules.RuleSetQueueName" /> as the _StoreId on the Rule Set queue.
                    In other words, My_Rules_Library.Active_Rules.Rule_Set must have values that match
                    My_RuleSet_Library.Active_RulesSets.StoreId, where the My_RuleSet_Queue.Active_RulesSets.StoreId is the store
                    Id for the rule set returned by the <see cref="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRules.RuleSetQueueName" /> and <see cref="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRules.RuleSetQueueFilter" />.
                </para>
                <para>This is a REQUIRED property</para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRules.RulesQueueFilter">
            <summary>
                A SQL filter to specify which rules to load from the <see cref="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRules.RulesQueueName" />
            </summary>
            <value>
                The rules queue filter.
            </value>
            <remarks>
                Example value: Rule_Name = 'MyRule'
                <para>
                    Leave this as an empty string if you want all the rules in the rules queue to execute against the store
                </para>
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRulesResponse">
            <summary>
                The response returned by the EvaluateRuleEngineRules API
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRulesResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRulesResponse" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRulesResponse.StoreXml">
            <summary>
                This is the store Xml AFTER the Rule Engine has applied the rules to it.
            </summary>
            <value>
                The store XML.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRulesResponse.Transactions">
            <summary>
                This is the list of transactions that were applied to the store as the rules were applied.
            </summary>
            <value>
                The transactions.
            </value>
            <remarks>
                Rule State is included in the transactions as a comment.  Rule State indicates if a rule was executed or not, etc.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateExpression.StoreId">
            <summary>
                A stored Id that will be loaded, and the Expression tested against
            </summary>
            <value>
                The store identifier.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateExpression.StoreXml">
            <summary>
                Raw Store XML that may be provided instead of a StoreId.  The Expression will be applied against this store
                instead.
            </summary>
            <value>
                The store XML.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateExpression.ContextXPath">
            <summary>
                An XPath selector that sets the context for the XPath in <see cref="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateExpression.Expression" />
            </summary>
            <value>
                An XPath expression used to select the root node.
            </value>
            <remarks>
                <para>
                    The XPath in the <see cref="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateExpression.Expression" /> will be relative to the node specified here.
                </para>
                <para>
                    The default value if one is not specified is /store/*[1].
                </para>
                <para>
                    This may be used when specifying either <see cref="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateExpression.StoreId" /> or <see cref="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateExpression.StoreXml" />
                </para>
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateExpression.Expression">
            <summary>
                The XPath Expression to be evaluated, either against the StoreXml provided in the request, or against the store
                specified by the store Id.
            </summary>
            <value>
                The expression.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateExpressionResponse.ExpressionResult">
            <summary>
                The result of the expression
            </summary>
            <value>
                The expression result.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.GetSystemUITemplate">
            <summary>
                Represents the request object for the GetSystemUITemplate API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.GetSystemUITemplateResponse">
            <summary>
                Represents the response object for the GetSystemUITemplate API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.GetSystemUITemplateResponse.Template">
            <value>
                The System template.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CountInvalidStores">
            <summary>
                Represents the request object for the CountInvalidStores API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountInvalidStores.AppId">
            <summary>
                The app name associated with this query.  Leave it as null to for invalid stores across all apps.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CountInvalidStoresResponse">
            <summary>
                Represents the response object for the CountInvalidStores API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CountInvalidStoresResponse.Count">
            <summary>
                The count of invalid stores found based on the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.CountInvalidStores" /> request.
            </summary>
            <value>
                The count of invalid stores.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.ListInvalidStoreIds">
            <summary>
                Represents the request object for the ListInvalidStoreIds API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListInvalidStoreIds.AppId">
            <summary>
                The app name associated with this query.  Leave it as null to list invalid stores across all apps.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.ListInvalidStoreIdsResponse">
            <summary>
                Represents the response object for the ListInvalidStoreIds API method
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.ListInvalidStoreIdsResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.ListInvalidStoreIdsResponse" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListInvalidStoreIdsResponse.InvalidStoreIds">
            <summary>
                The list of fully qualified store ids found based on the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.ListInvalidStoreIds" /> request.
            </summary>
            <value>
                The list of invalid store ids.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.ListSystemUITemplates">
            <summary>
                Represents the request object for the ListSystemUITemplates API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.ListSystemUITemplatesResponse">
            <summary>
                Represents the response object for the ListSystemUITemplatesResponse API method
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.ListSystemUITemplatesResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.ListSystemUITemplatesResponse" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListSystemUITemplatesResponse.Templates">
            <value>
                The list of system template names.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds">
            <summary>
                Represents the request object for the ListStoreIds API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.AppId">
            <summary>
                Optional parameter to narrow down values by App
            </summary>
            <remarks>
                If AppId is null, consider setting <see cref="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.WantFullyQualifiedStoreIds" /> to true.
                If AppId is null, then the results can be from many different apps, and if store ids are not fully qualified, you
                won't know the app associated with the invalid store w/out retrieving the store and evaluating it.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.Archived">
            <summary>
                If not null, will apply a filter on the query for stores on whether or not the Archive column is set to true or
                false accordingly.  Leave null to exclude this from the filter.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.Shadow">
            <summary>
                If not null, will apply a filter on the query for stores on whether or not the Shadow column is set to true or
                false accordingly.  Leave null to exclude this from the filter.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.Filter">
            <summary>
                This is an additional filter which may be applied to the query.
            </summary>
            <value>
                The filter.
            </value>
            <remarks>
                This filter is optional.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.OrderBy">
            <summary>
                ORDER BY clause, such as "_id DESC".
            </summary>
            <value>
                The order by.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.PageIndex">
            <summary>
                Index of the current page, when paging is requested. -1 or 0(the default) for no paging.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.PageSize">
            <summary>
                Number of rows to return in a single page. 0 or -1 for "all"
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.StartDateTime">
            <summary>
                The start date time range for this search.
            </summary>
            <remarks>
                If specified, the query for store ids will search only those record updated BEFORE this timestamp.
                Is compared to the DateUpdated column in the database.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.EndDateTime">
            <summary>
                The end date time range for this search.
            </summary>
            <value>
                The end date time.
            </value>
            <remarks>
                If specified, the query for store ids will search only those record updated BEFORE this timestamp.
                Is compared to the DateUpdated column in the database.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.WantFullyQualifiedStoreIds">
            <summary>
                Indicates that you want the returned <see cref="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIdsResponse.IdList" /> to contain fully qualified store
                ids so that you will know the app name associated w/ the invalid store.
            </summary>
            <remarks>
                By default, the returned list of store ids are not fully qualified. If you specified a null <see cref="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds.AppId" />,
                then you will receive a list of store ids but you won't know which app they're associated with.
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.ListStoreIdsResponse">
            <summary>
                Represents the response object for the ListTransactions API method
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.ListStoreIdsResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.ListStoreIdsResponse" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListStoreIdsResponse.IdList">
            <summary>
                The list of store ids found based on the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.ListStoreIds" /> request.
            </summary>
            <value>
                The identifier list.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PublishSiteUITemplates">
            <summary>
                Represents the request object for the PublishSiteUITemplates API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PublishSiteUITemplatesResponse">
            <summary>
                Represents the response object for the PublishSiteUITemplates API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PublishSiteUITemplatesResponse.MessageIsPublished">
            <summary>
            Indicates wether the message was published successfully or not.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.RefreshMediaCDN">
            <summary>
                Represents the request object for the RefreshMediaCDN API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.RefreshMediaCDNResponse">
            <summary>
                Represents the response object for the RefreshMediaCDN API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.RefreshMediaCDNResponse.TaskId">
            <summary>
                The task Id associated with handling this request. Can be queried for completion using
                <see cref="M:RequirementsLive.Sdk.Api.Content.RqlContentApiClient.GetTask(System.String)" />
            </summary>
            <value>
                The task identifier.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.RollBackTransactionsBatch">
            <summary>
                Represents the request object for the RollBackTransactionsBatch API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.RollBackTransactionsBatchResponse">
            <summary>
                Represents the response object for the RollBackTransactionsBatch API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CreateTransactionsBatch">
            <summary>
                Represents the request object for the CreateTransactionsBatch API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CreateTransactionsBatchResponse">
            <summary>
                Represents the response object for the CreateTransactionsBatch API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CreateStore">
            <summary>
            Represents the request object for the CreateStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CreateStore.AppName">
            <summary>The app name.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CreateStore.BatchId">
            <summary>Optional: Transactions Batch Id.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.CreateStoreResponse">
            <summary>
            Represents the response object for the CreateStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.CreateStoreResponse.StoreId">
            <summary> The id of a new store.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.ListAppStores">
            <summary>
                Represents the request object for the GetAppStores API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListAppStores.AppId">
            <summary>The app id.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListAppStores.PageSize">
            <summary>Number of rows per page</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListAppStores.PageIndex">
            <summary>Page number</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListAppStores.Filter">
            <summary>Query filter</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListAppStores.ZipData">
            <summary>Zip output xmls </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.ListAppStoresResponse">
            <summary>
                Represents the response object for the ListStores API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ListAppStoresResponse.Stores">
            <summary>List of stores for the app</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.AppStore">
            <summary>
                Represents the individual store records
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.AppStore.StoreId">
            <summary>The store Id</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.AppStore.StoreXml">
            <summary>The store Xml</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.AppStore.StoreZip">
            <summary>The store Zip</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PutTransactions">
            <summary>
            Represents the request object for the PutTransactions API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutTransactions.StoreId">
            <summary>
            This is the store Id associated with the PutTransactions request.
            </summary>
            <value>
            The store identifier.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.TransactionBatchInfo.TransactionType">
            <summary>
            Gets or sets the type of the transaction.
            </summary>
            <value>
            The type of the transaction.
            </value>
            <remarks>
                Possible values are: Insert, Update, Delete, MoveAfter, MoveBefore, InsertAfter
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PutTransactionsResponse">
            <summary>
            Represents the response object for the PutTransactions API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutTransactionsResponse.StoreId">
            <summary>
            This is the store Id associated with the PutTransactions request.
            </summary>
            <value>
            The store identifier.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutTransactionsResponse.TransactionId">
            <summary>
            This is the last transaction Id associated w/ the store after the PutTransactions request.
            </summary>
            <value>
            The transaction Id.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.SelectQueueData">
            <summary>
                Represents the request object for the SelectQueueData API method.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.SelectQueueData.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectQueueData" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectQueueData.QueueName">
            <summary>
                Name of the queue.  Should be in the form of AppName.QueueName
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectQueueData.Filter">
            <summary>
                Queue filter.  Optional
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectQueueData.PageIndex">
            <summary>
                Gets or sets the index of the page to get
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectQueueData.PageSize">
            <summary>
                Gets or sets the size of the page.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectQueueData.ContextStoreId">
            <summary>
                If the results are evaluated in the context of another store (e.g. queue in scope), indicate the store Id.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectQueueData.IncludeHiddenColumns">
            <summary>
                Includes hidden columns in the result.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.SelectQueueDataResponse">
            <summary>
                Represents the response object for the SelectQueueData API method.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.SelectQueueDataResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectQueueDataResponse"/> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectQueueDataResponse.Properties">
            <summary>
            Contains the list of column names returned from the entity
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectQueueDataResponse.DisplayNames">
            <summary>
            Contains the list of column display names of the queue
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectQueueDataResponse.Entities">
            <summary>
            Result of the query.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.SelectedQueueData">
            <summary>
                Represents one row of selected queue data.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectedQueueData.Item(System.String)">
            <summary>
                An indexer to gets the property value associated with the with the specified property name.
            </summary>
            <value>
                The property value
            </value>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectedQueueData.Response">
            <summary>
                This is a reference to the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectQueueDataResponse" /> which contains this <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectQueueData" /> instance.
            </summary>
            <value>
                The response.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectedQueueData.Values">
            <summary>
                The list of values associated with the selected entity. The index into this List matches up with the index of the
                property name in <seealso cref="P:RequirementsLive.Sdk.Api.Data.Model.SelectQueueDataResponse.Properties" />
            </summary>
            <value>
                The values.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesWithAggregation">
            <summary>
                Represents the request object for the SelectEntitiesWithAggregation API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesWithAggregationResponse">
            <summary>
                Represents the response object for the SelectEntitiesWithAggregation API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.StoreExists">
            <summary>
            The StoreExists request object. Used to test for the existance of a store
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.StoreExists.StoreId">
            <summary>
            The store id to check.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.StoreExistsResponse.StoreExists">
            <summary>
            Indicates that the store id exists in the current site.
            </summary>
            <value>
              <c>true</c> if [store exists]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.DeleteTransaction">
            <summary>
            Represents the request object for the DeleteTransaction API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.DeleteTransaction.StoreId">
            <summary>
            The id of the store whose transaction you want to delete.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.DeleteTransaction.TransactionId">
            <summary>
            The transaction id of the transaction to delete.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.DeleteTransactionResponse">
            <summary>
            Represents the response object for the DeleteTransaction API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.GetArtifact">
            <summary>
            Represents the request object for the GetArtifact API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.GetArtifactResponse">
            <summary>
            Represents the response object for the GetArtifact API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.GetStore">
            <summary>
                Represents the request object for the GetStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.GetStore.StoreId">
            <summary>The store id.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.GetStore.ZipData">
            <summary> Zip output xml</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.GetStoreResponse">
            <summary>
                Represents the response object for the GetStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.GetStoreResponse.StoreId">
            <summary>The store id.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.GetStoreResponse.StoreXml">
            <summary>The raw xml of a store.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.GetStoreResponse.StoreZip">
            <summary>Store zip</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.GetStoreProperties">
            <summary>
                Represents the request object for the GetStoreProperty API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.GetStorePropertiesResponse">
            <summary>
                Represents the response object for the GetStoreProperty API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.GetTransaction">
            <summary>
                Represents the request object for the GetTransaction API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.GetTransactionResponse">
            <summary>
                Represents the response object for the GetTransaction API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.ListTransactions">
            <summary>
                Represents the request object for the ListTransactions API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.ListTransactionsResponse">
            <summary>
                Represents the response object for the ListTransactions API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PublishApps">
            <summary>
            Represents the request object for the PublishApps API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PublishApps.AppNames">
            <summary>
            List of app names to republish
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PublishAppsResponse">
            <summary>
            Represents the response object for the PublishApps API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PublishStore">
            <summary>
                Represents the request object for the PublishStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PublishStore.StoreId">
            <summary>The store id.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PublishStoreResponse">
            <summary>
                Represents the response object for the PublishStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PublishStoreResponse.StoreId">
            <summary>The store id.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PutArtifact">
            <summary>
                Represents the request object for the PutArtifact API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PutArtifactResponse">
            <summary>
                Represents the response object for the PutArtifact API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutArtifactResponse.ArtifactId">
            <summary>The artifact id.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.ArtifactDetails">
            <summary>
                A class to hold properties associated with the artifact being uploaded with the PutArtifact API.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ArtifactDetails.ArtifactId">
            <summary>
                The artifact Id, if known
            </summary>
            <remarks>
                When you specify the artifactId w/ a call to PutArtifact, the artifact Id is preserved on the target site.
                The artifact file on the server side is overwritten w/ the this version of artifact.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ArtifactDetails.FilePath">
            <summary>
                The file path to the artifact being uploaded, if known.
            </summary>
            <remarks>
                This may be null if using the PutArtifact from the results of GetArtifact
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ArtifactDetails.ContentType">
            <summary>
                Gets or sets the Content-Type of the artifact
            </summary>
            <value>
                The type of the content.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ArtifactDetails.ContentLength">
            <summary>
                Gets or sets the length of the content, in bytes
            </summary>
            <value>
                The length of the content.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.ArtifactDetails.OriginalFileName">
            <summary>
                Gets or sets the name of the original file the artifact is uploaded as.
            </summary>
            <value>
                The name of the original file.
            </value>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.ArtifactDetails.FromFile(System.String)">
            <summary>
                Creates an artifact details object based on a file.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PutStore">
            <summary>
            Represents the request object for the PutStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutStore.StoreId">
            <summary>The store id.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutStore.StoreXml">
            <summary>The raw xml of a store.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutStore.BatchId">
            <summary>Optional: Transactions BatchId.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PutStoreResponse">
            <summary>
            Represents the response object for the PutStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutStoreResponse.StoreId">
            <summary>The store id.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PutStoreProperties">
            <summary>
                Represents the request object for the PutStoreProperties API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PutStorePropertiesResponse">
            <summary>
                Represents the response object for the PutStoreProperties API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PutTransaction">
            <summary>
            Represents the request object for the PutTransaction API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutTransaction.IsXml">
            <summary>
                Indicates that the <see cref="P:RequirementsLive.Sdk.Api.Data.Model.PutTransaction.ValueExpression" /> contains fully formed XML that will be inserted at the node
                specified in the <see cref="P:RequirementsLive.Sdk.Api.Data.Model.PutTransaction.TargetExpression" />
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutTransaction.StoreId">
            <summary>
                The StoreId of the store that this transaction will be applied against.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutTransaction.TargetExpression">
            <summary>
            An xpath expression to the node to be updated by the transaction.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutTransaction.TransactionType">
            <summary>
            Gets or sets the type of the transaction.
            </summary>
            <value>
            The type of the transaction.
            </value>
            <remarks>
                Possible values are: Insert, InsertFirst, Update, Delete, MoveAfter, MoveBefore, InsertAfter
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutTransaction.ValueExpression">
            <summary>
                This is the xpath value expression which will be placed at the node specified by the
                <see cref="P:RequirementsLive.Sdk.Api.Data.Model.PutTransaction.TargetExpression" />.
            </summary>
            <remarks>
                A value or XML, if <see cref="P:RequirementsLive.Sdk.Api.Data.Model.PutTransaction.IsXml" /> is true
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutTransaction.BatchId">
            <summary>
                The Transaction Batch Id that this transaction will take place within. Allows for the rollback or commit of this
                transaction at a later time.
            </summary>
            <remarks>
                See the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.CreateTransactionsBatch" /> API, which creates the batch Id.
                See the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.RollBackTransactionsBatch" /> API, which undoes the transactions that occured w/in a batch.
                See the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.EndTransactionsBatch" /> API, which ends the transaction w/out rolling it back.
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.PutTransactionResponse">
            <summary>
                Represents the response object for the PutTransaction API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutTransactionResponse.StoreId">
            <summary>
                This is the store Id associated with the PutTransaction request.
            </summary>
            <value>
                The store identifier.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.PutTransactionResponse.TransactionId">
            <summary>
                This is the last transaction Id associated w/ the store after the PutTransaction request.
            </summary>
            <value>
                The transaction Id.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.QueryStore">
            <summary>
            Represents the request object for the QueryStore API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.QueryStoreResponse">
            <summary>
            Represents the response object for the QueryStore API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.RebuildStore">
            <summary>
            Represents the request object for the RebuildStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.RebuildStore.StoreId">
            <summary>The store id.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.RebuildStoreResponse">
            <summary>
            Represents the response object for the RebuildStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.RebuildStoreResponse.StoreId">
            <summary>The store id.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.RunJob">
            <summary>
                Represents the request object for the RunJob API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.RunJobResponse">
            <summary>
                Represents the response object for the RunJob API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntities">
            <summary>
                Represents the request object for the SelectEntities API method.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.SelectEntities.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntities" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectEntities.AppName">
            <summary>
                The name of the application.
            </summary>
            <value>
                The name of the application.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectEntities.Entity">
            <summary>
                The Entity name being queried, such as List
            </summary>
            <remarks>
                If this is null or empty, List is assumed.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectEntities.Properties">
            <summary>
                This is the list of the columns in the Entity that are being selected
            </summary>
            <value>
                The properties of the entity being selected
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectEntities.Filter">
            <summary>
                A Sql queue filter
            </summary>
            <value>
                The queue filter.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectEntities.PageIndex">
            <summary>
                Gets or sets the index of the page to get
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectEntities.PageSize">
            <summary>
                Gets or sets the size of the page.
            </summary>
            <value>
                The size of the page.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectEntities.ContextStoreId">
            <summary>
                This contains a store Id that is used as the Context Store while performing the entity query
            </summary>
            <remarks>
                <para>
                    This is required in cases where the entity is an
                    Analyze Queue that has a filter that has a dependency on a specific store id.
                    If the wrong store is the context store, queries will return 0 stores.
                </para>
                <para>
                    Any expressions on filters on the @queue-filter or @query-filter that depend on store context will use this
                    store as the current store.
                </para>
                Example: @query-filter "StoreId = {{store-id()}}"
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.SelectEntities.WithProperties(System.String[])">
            <summary>
                Part of a fluent api method to append properties to this SelectEntities request.
            </summary>
            <param name="properties">The properties.</param>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesResponse">
            <summary>
                Represents the response object for the SelectEntities API method.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesResponse"/> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesResponse.Properties">
            <summary>
                Contains the list of column names returned from the entity
            </summary>
            <value>
                The properties.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesResponse.Entities">
            <summary>
                A collection of found Entities
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.SelectedEntity">
            <summary>
                Represents one row of selected entity data.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectedEntity.Item(System.String)">
            <summary>
                An indexer to gets the property value associated with the with the specified property name.
            </summary>
            <value>
                The property value
            </value>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectedEntity.Response">
            <summary>
                This is a reference to the <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesResponse" /> which contains this containing this
                <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectedEntity" /> instance.
            </summary>
            <value>
                The response.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectedEntity.StoreId">
            <summary>
                The store identifier for this entity
            </summary>
            <value>
                The store identifier.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.SelectedEntity.Values">
            <summary>
                The list of values associated with the selected entity. The index into this List matches up with the index of the
                property name in <seealso cref="P:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesResponse.Properties" />
            </summary>
            <value>
                The values.
            </value>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.SelectedEntity.ToDateTime(System.String)">
            <summary>
                Converts a property value from a string to a DateTime containing local time, if that property contains a DateTime
                value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.Model.SelectedEntity.ToDateTimeUtc(System.String)">
            <summary>
                Converts a property value from a string to a DateTime containing UTC, if that property contains a DateTime value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
            <remarks>
                DateTime values are assumed to be UTC.
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.IStoreOperations">
            <summary>
                Represents a request that applies changes to a store and provides
                settings to control what happens when a store is changed by the API.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.IStoreOperations.PublishEntities">
            <summary>
                When the store is saved, the entities will be published if true.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.IStoreOperations.RunLookupUpdates">
            <summary>
                When the store is saved, the lookup updates will be run if true.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.IStoreOperations.RunPropagators">
            <summary>
                When the store is saved, propagators will be run if true.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.IStoreOperations.RunWorkbook">
            <summary>
                When the store is saved, the workbook(@execute blocks) will be run if true.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.IStoreOperations.SaveStore">
            <summary>
                This is set to true when the store operation is applied, even if you set it to false.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.StoreOperationRequest`1">
            <summary>
                Provides the base implementation used to create plaform API request objects for store operations.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.StoreOperationRequest`1.PublishEntities">
            <summary>
                When the store is saved, the entities will be published if true. Defaults to true. 
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.StoreOperationRequest`1.RunLookupUpdates">
            <summary>
                When the store is saved, the lookup updates will be run if true. Defaults to false
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.StoreOperationRequest`1.RunPropagators">
            <summary>
                When the store is saved, propagators will be run if true. Default is false.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.StoreOperationRequest`1.RunWorkbook">
            <summary>
                When the store is saved, the workbook(@execute blocks) will be run if true. The default is false.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.StoreOperationRequest`1.SaveStore">
            <summary>
                This is set to true when the store operation is applied, even if you set it to false.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.DeleteStore">
            <summary>
            Represents the request object for the DeleteStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.DeleteStore.StoreId">
            <summary>
             The store id.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.DeleteStore.BatchId">
            <summary>
             Optional: The BatchId.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.DeleteStore.Force">
            <summary>
             Delete Entities and Transactions even when the store does not exist. StoreId must be fully-qualified ("AppId.StoreId") when this parameter is true.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.DeleteStoreResponse">
            <summary>
            Represents the response object for the DeleteStore API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Data.Model.DeleteStoreResponse.StoreId">
            <summary>
            An id of the deleted store. 
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.Model.NamespaceDoc">
            <summary>
            Contains the types used when communicating with platform data services.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.RqlDataApiClient">
            <summary>
            Represents the data API service client 
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CountEntities(RequirementsLive.Sdk.Api.Data.Model.CountEntities)">
            <summary>
            Counts entities of an app.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.CountEntities"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.CountEntitiesResponse"/> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CountEntities(System.String,System.String,System.String)">
            <summary>
            Counts entities of an app.
            </summary>
            <param name="appName"></param>
            The app name.
            <param name="entity"></param>
            The entity name.
            <param name="filter"></param>
            The entity filter.
            <returns>The number of entities.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.DeleteInvalidStores(RequirementsLive.Sdk.Api.Data.Model.DeleteInvalidStores)">
            <summary>
                Executes the DeleteInvalidStores API method, returning a count of invalid stores.
            </summary>
            <param name="request">The CountInvalidStores request</param>
            <returns>The DeleteInvalidStores response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CountQueueData(RequirementsLive.Sdk.Api.Data.Model.CountQueueData)">
            <summary>
            Counts rows of a queue.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.CountQueueData" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.CountQueueDataResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CountQueueData(System.String,System.String,System.String)">
            <summary>
            Counts rows of a queue.
            </summary>
            <param name="queueName"></param>
            The queue name.
            <param name="filter"></param>
            The queue filter.
            <param name="contextStoreId"></param>
            The context store id.
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CountStores(RequirementsLive.Sdk.Api.Data.Model.CountStores)">
            <summary>
                Executes the CountStores API method
            </summary>
            <param name="request">The CountStores request</param>
            <returns>The CountStoresResponse response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CreateLoginToken(RequirementsLive.Sdk.Api.Data.Model.CreateLoginToken)">
            <summary>
                Creates a login token for token based user login.
            </summary>
            <param name="request">The <see cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CreateLoginToken(RequirementsLive.Sdk.Api.Data.Model.CreateLoginToken)" /> request object.</param>
            <returns>The <see cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CreateLoginToken(RequirementsLive.Sdk.Api.Data.Model.CreateLoginToken)" /> object.</returns>
            <remarks>
                <para>
                    The token may be used w/ the following url: http://sitename.com/rql/TAuth/{TokenKey}
                </para>
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.EndTransactionsBatch(RequirementsLive.Sdk.Api.Data.Model.EndTransactionsBatch)">
            <summary>End transactions batch.</summary>
            <param name="request">The EndTransactionsBatch request</param>
            <returns>The EndTransactionsBatch response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.EndTransactionsBatch(System.String)">
            <summary>End transactions batch.</summary>
            <param name="batchId">The Id of the batch.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.EvaluateRuleEngineRule(RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRule)">
            <summary>
                Evaluates a Rule Engine rule by applying the rule to the store xml provided in the request, and returning
                the changed store xml in the response along with any transactions.
                The rule xml is contained in <see cref="P:RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRule.RuleXml"/> instead of the database.
            </summary>
            <param name="request">The request.</param>
            <returns>the changed store xml and a list of transactions applied to the store</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.EvaluateRuleEngineRules(RequirementsLive.Sdk.Api.Data.Model.EvaluateRuleEngineRules)">
            <summary>
                Evaluates a Rule Engine rule set by applying the rule set to the store xml provided in the request, and returning
                the changed store xml in the response along with any transactions.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.EvaluateExpression(RequirementsLive.Sdk.Api.Data.Model.EvaluateExpression)">
            <summary>
                Executes the EvaluateExpression API method
            </summary>
            <param name="request">The EvaluateExpression request</param>
            <returns>The EvaluateExpression response</returns>
            <example>
                This example demonstrates the usage of the GetApp API in the context of an NUnit Unit Test.
                <code>
                var dataApi = new RqlDataApiClient("yoursite.requirementslive.com");
                dataApi.Authenticate("username_with_api_access", "password");
            
                EvaluateExpressionRequest request = new EvaluateExpressionRequest
                {
                    StoreId = "str-my-valid-store-id",
                    Expression = "true()"
                };
            
                EvaluateExpressionResponse response = dataApi.EvaluateExpression(request);
            
                Assert.That(response.ExpressionResult, Is.EqualTo("True"));        
            </code>
            </example>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetSystemUITemplate(RequirementsLive.Sdk.Api.Data.Model.GetSystemUITemplate)">
            <summary>Gets system UI template.</summary>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CountInvalidStores(RequirementsLive.Sdk.Api.Data.Model.CountInvalidStores)">
            <summary>
                Executes the CountInvalidStores API method, returning a count of invalid stores.
            </summary>
            <param name="request">The CountInvalidStores request</param>
            <returns>The CountInvalidStores response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.ListInvalidStoreIds(RequirementsLive.Sdk.Api.Data.Model.ListInvalidStoreIds)">
            <summary>
                Executes the ListInvalidStoreIds API method, returning a list of invalid store ids.
            </summary>
            <param name="request">The ListInvalidStoreIds request</param>
            <returns>The ListInvalidStoreIds response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.ListSystemUITemplates(RequirementsLive.Sdk.Api.Data.Model.ListSystemUITemplates)">
            <summary>List System UI templates.</summary>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.ListStoreIds(RequirementsLive.Sdk.Api.Data.Model.ListStoreIds)">
            <summary>
                Executes the ListStoreIds API method
            </summary>
            <param name="request">The ListStoreIds request</param>
            <returns>The ListStoreIds response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PublishSiteUITemplates(RequirementsLive.Sdk.Api.Data.Model.PublishSiteUITemplates)">
            <summary>Publishes all custom modified UI templates.</summary>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PublishSiteUITemplates">
            <summary>Publishes all custom modified UI templates.</summary>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.RefreshMediaCDN(RequirementsLive.Sdk.Api.Data.Model.RefreshMediaCDN)">
            <summary>Refreshes Media CDN.</summary>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.RefreshMediaCDN">
            <summary>Refreshes Media CDN.</summary>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.RollBackTransactionsBatch(System.String)">
            <summary>RollBack a batch.</summary>
            <param name="batchId">The Id of the batch.</param>
            <returns>The Task id.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.RollBackTransactionsBatch(RequirementsLive.Sdk.Api.Data.Model.RollBackTransactionsBatch)">
            <summary>RollBack a batch.</summary>
            <param name="request">The RollBackTransactionsBatch request</param>
            <returns>The RollBackTransactionsBatch response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CreateTransactionsBatch(RequirementsLive.Sdk.Api.Data.Model.CreateTransactionsBatch)">
            <summary>Creates a transactions batch.</summary>
            <param name="request">The CreateTransactionsBatch request</param>
            <returns>The CreateTransactionsBatch response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CreateTransactionsBatch(RequirementsLive.Sdk.Api.Data.Model.BatchAction,System.String,System.String,System.String)">
            <summary>Creates a transactions batch.</summary>
            <param name="BatchAction">The batch action.</param>
            <param name="appName">The app name.</param>
            <param name="firstStoreId">The first store in the batch.</param>
            <param name="description">The batch description.</param>
            <returns>The id of a new batch.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CreateStore(System.String,System.String)">
            <summary>
            Creates a store.
            </summary>
            <param name="appName">The app name.</param>
            <param name="batchId">The batch identifier in case you need to roll the actions back.</param>
            <returns>
            The id of a new store.
            </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.CreateStore(RequirementsLive.Sdk.Api.Data.Model.CreateStore)">
            <summary>Creates a store.</summary>
            <param name="request">The CreateStore request</param>
            <returns>The CreateStore response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.ListAppStores(RequirementsLive.Sdk.Api.Data.Model.ListAppStores)">
            <summary>
                Lists the store records of an app.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.ListAppStores(System.String)">
            <summary>
                Lists the store records of an app.
            </summary>
            <param name="appId">The appId</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PutTransactions(RequirementsLive.Sdk.Api.Data.Model.PutTransactions)">
            <summary>
            Executes the PutTransaction API method
            </summary>
            <param name="request">The PutTransaction request</param>
            <returns>The PutTransaction response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.SelectQueueData(RequirementsLive.Sdk.Api.Data.Model.SelectQueueData)">
            <summary>
                Selects data from a queue.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectQueueData" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectQueueDataResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.SelectEntitiesWithAggregation(RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesWithAggregation)">
            <summary>
                Selects entities of an app applying aggregation functions.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesWithAggregation" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesWithAggregationResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.StoreExists(RequirementsLive.Sdk.Api.Data.Model.StoreExists)">
            <summary>
                Checks to see if a store exists with the specified store Id in the site to which the API is currently authenticated
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntities" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.DeleteTransaction(System.String,System.String)">
            <overloads>Deletes a transaction of a store.</overloads>
            <summary>
            Deletes a transaction of a store.
            </summary>
            <param name="storeId">The id of the store whose transaction you want to delete.</param>
            <param name="transactionId">The transaction id of the transaction to delete.</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.DeleteTransaction(RequirementsLive.Sdk.Api.Data.Model.DeleteTransaction)">
            <summary>
            Deletes a transaction of a store.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.DeleteTransaction"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.DeleteTransactionResponse"/> object.</returns>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.ArtifactHeaderPrefix">
            <summary>
                The prefix used in the request headers to specify artifact related properties.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetArtifact(System.String)">
            <summary>
                Gets an artifact.
            </summary>
            <param name="artifactId">The artifact id.</param>
            <returns>A binary stream.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetStore(RequirementsLive.Sdk.Api.Data.Model.GetStore)">
            <summary>
                Gets a store.
            </summary>
            <param name="request">The GetStore request</param>
            <returns>The GetStore response</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PutStore(RequirementsLive.Sdk.Api.Data.Model.PutStore)" />
            <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.DeleteStore(RequirementsLive.Sdk.Api.Data.Model.DeleteStore)" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetStore(System.String)">
            <summary>
                Gets a store.
            </summary>
            <param name="storeId">The store id.</param>
            <returns>The raw xml of a store.</returns>
            <seealso cref="!:PutStore(string,string)" />
            <seealso cref="!:DeleteStore(string)" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetStoreProperty(System.String,System.String)">
            <summary>
                Executes the GetStoreProperty API method
            </summary>
            <param name="storeId">The id of the store</param>
            <param name="propertyName">The name of the store property</param>
            <returns>The value of the store property</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetStoreProperties(System.String,System.String[])">
            <summary>
                Executes the GetStoreProperty API method
            </summary>
            <param name="storeId">The id of the store</param>
            <param name="propertyNames">The name of the properties</param>
            <returns>The dictionary of store properties and values</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetStoreProperties(RequirementsLive.Sdk.Api.Data.Model.GetStoreProperties)">
            <summary>
                Executes the GetStoreProperty API method
            </summary>
            <param name="request">The GetStoreProperty request</param>
            <returns>The GetStoreProperty response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetTransaction(System.String,System.String)">
            <summary>
                Executes the GetTransaction API method
            </summary>
            <param name="storeId">The store id of the request</param>
            <param name="transactionId">The transaction id of the request</param>
            <returns>The GetTransaction response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetTransaction(RequirementsLive.Sdk.Api.Data.Model.GetTransaction)">
            <summary>
                Executes the GetTransaction API method
            </summary>
            <param name="request">The GetTransaction request</param>
            <returns>The GetTransaction response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.ListTransactions(RequirementsLive.Sdk.Api.Data.Model.ListTransactions)">
            <summary>
                Executes the ListTransactions API method
            </summary>
            <param name="request">The ListTransactions request</param>
            <returns>The ListTransactions response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PublishApps(RequirementsLive.Sdk.Api.Data.Model.PublishApps)">
            <summary>
            Executes the PublishApps API method
            </summary>
            <param name="request">The PublishApps request</param>
            <returns>The PublishApps response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PublishStore(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Executes various publishing operations on a store.
            </summary>
            <param name="storeId">The store id.</param>
            <param name="publishEntities">Allows to publish entities.</param>
            <param name="runWorkbook">Allows to run a workbook.</param>
            <param name="runPropagators">Allows to run propagators.</param>
            <param name="runLookupUpdates">Allows to run lookup updates.</param>
            <returns>The PublishStore response</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.RebuildStore(System.String)" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PublishStore(RequirementsLive.Sdk.Api.Data.Model.PublishStore)">
            <summary>
                Executes various publishing operations on a store.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.PublishStore" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.PublishStoreResponse" /> object.</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.RebuildStore(RequirementsLive.Sdk.Api.Data.Model.RebuildStore)" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PutArtifact(RequirementsLive.Sdk.Api.Data.Model.ArtifactDetails,System.IO.Stream)">
            <summary>
                Uploads an artifact
            </summary>
            <param name="artifact">The artifact info.</param>
            <param name="stream">The stream.</param>
            <returns></returns>
            <remarks>
                Calling PutArtifact with the same artifact Id that already exists on the server will result in the existing
                artifact being overwritten.
            </remarks>
            <exception cref="T:System.ArgumentException">The OriginalFileName must be specified;artifact</exception>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PutArtifact(System.String)">
            <summary>Uploads an artifact.</summary>
            <param name="path">The full path to the artifact file.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PutStore(System.String,System.String,System.String)">
            <summary>
            Updates a store.
            </summary>
            <param name="storeId">The store id.</param>
            <param name="storeXml">The raw xml of a store.</param>
            <param name="batchId">The batch identifier.</param>
            <returns>
            The PutStore response
            </returns>
            <overloads>Updates a store.</overloads>
            <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetStore(System.String)" />
            <seealso cref="!:DeleteStore(string)" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PutStore(RequirementsLive.Sdk.Api.Data.Model.PutStore)">
             <summary>
            Updates a store.
             </summary>
             <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.PutStore"/> request object.</param>
             <returns>The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.PutStoreResponse"/> object.</returns>
             <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetStore(RequirementsLive.Sdk.Api.Data.Model.GetStore)"/>
             <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.DeleteStore(RequirementsLive.Sdk.Api.Data.Model.DeleteStore)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PutStoreProperties(RequirementsLive.Sdk.Api.Data.Model.PutStoreProperties)">
            <summary>
                Executes the PutStoreProperties API method
            </summary>
            <param name="request">The PutStoreProperties request</param>
            <returns>The PutStoreProperties response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PutTransaction(RequirementsLive.Sdk.Api.Data.Model.PutTransaction)">
            <summary>
            Executes the PutTransaction API method
            </summary>
            <param name="request">The PutTransaction request</param>
            <returns>The PutTransaction response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.QueryStore(System.String,System.String)">
            <summary>
            Executes the QueryStore API method
            </summary>
            <param name="storeId">Store id</param>
            <param name="query">XPath query </param>
            <returns>The QueryStore response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.QueryStore(RequirementsLive.Sdk.Api.Data.Model.QueryStore)">
            <summary>
            Executes the QueryStore API method
            </summary>
            <param name="request">The QueryStore request</param>
            <returns>The QueryStore response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.RebuildStore(System.String)">
            <summary>
            Rebuilds a store by replaying all of its transactions.
            </summary>
            <param name="storeId">The store id.</param>
            <returns>The store id if the operation is successful.</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PublishStore(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.RebuildStore(RequirementsLive.Sdk.Api.Data.Model.RebuildStore)">
            <summary>
            Rebuilds a store by replaying all of its transactions.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.RebuildStore"/> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.RebuildStoreResponse"/> object.</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PublishStore(RequirementsLive.Sdk.Api.Data.Model.PublishStore)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.RunJob(System.String)">
            <summary>
                Executes the RunJob API method
            </summary>
            <param name="jobName">The name of the job to run</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.RunJob(RequirementsLive.Sdk.Api.Data.Model.RunJob)">
            <summary>
                Executes the RunJob API method
            </summary>
            <param name="request">The RunJob request</param>
            <returns>The RunJob response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.SelectEntities(RequirementsLive.Sdk.Api.Data.Model.SelectEntities)">
            <summary>
                Selects entities of an app.
            </summary>
            <param name="request">The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntities" /> request object.</param>
            <returns>The <see cref="T:RequirementsLive.Sdk.Api.Data.Model.SelectEntitiesResponse" /> object.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.RqlDataApiClient"/> class.
            </summary>
            <param name="site">The site.</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.#ctor(RequirementsLive.Sdk.Api.Data.RqlDataApiClientConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Data.RqlDataApiClient"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.DeleteStore(System.String,System.String)">
            <summary>
            Deletes a store and its transactions and entities. This operation is permanent. If the store does not exist, throws an exception.
            </summary>
            <param name="storeId">The store id.</param>
            <param name="batchId">The batch identifier in case the action should be rolled back.</param>
            <overloads>Deletes a store and its transactions and entities. This operation is permanent.</overloads>
            <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetStore(System.String)" />
            <seealso cref="!:PutStore(string,string)" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.DeleteStore(RequirementsLive.Sdk.Api.Data.Model.DeleteStore)">
            <summary>
            Deletes a store and its transactions and entities. This operation is permanent. If the store does not exist, throws an exception.
            </summary>
            <param name="request">The DeleteStore request</param>
            <returns>The DeleteStore response</returns>
            <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.GetStore(RequirementsLive.Sdk.Api.Data.Model.GetStore)"/>
            <seealso cref="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.PutStore(RequirementsLive.Sdk.Api.Data.Model.PutStore)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClient.ForceDeleteStore(System.String,System.String,System.String)">
            <summary>
            Deletes a store and its transactions and entities. Will try to delete (orphan) entities and transactions even when the store does not exist.
            </summary>
            <param name="appId">The app id.</param>
            <param name="storeId">The store id.</param>
            <param name="batchId">The batch identifier in case the action needs to be rolled back.</param>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient">
            <summary>
            Interface for the Data API
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.CountEntities(RequirementsLive.Sdk.Api.Data.Model.CountEntities)">
            <summary>
                Counts the entities based on the app, entity, and filter specified in the request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.SelectEntities(RequirementsLive.Sdk.Api.Data.Model.SelectEntities)">
            <summary>
                Selects the entities from an app
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.ListStoreIds(RequirementsLive.Sdk.Api.Data.Model.ListStoreIds)">
            <summary>
            Lists the store ids by querying the stores table directly.
            </summary>
            <param name="request"></param>
            <returns>A <see cref="T:RequirementsLive.Sdk.Api.Data.Model.ListStoreIdsResponse"/> containing a list of store ids that match the request filter.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.ListInvalidStoreIds(RequirementsLive.Sdk.Api.Data.Model.ListInvalidStoreIds)">
            <summary>
                Lists the fully qualified store ids of invalid stores for all apps or for a specific app.
            </summary>
            <param name="request"></param>
            <returns></returns>
            <remarks>
                The return value contains fully qualified store ids so that you can tell which app is associated with the invalid store.
            
                Invalid stores are typically very small stores that don't have any of nodes under neath the data node(ie:
                /store/AppName)
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.CountInvalidStores(RequirementsLive.Sdk.Api.Data.Model.CountInvalidStores)">
            <summary>
                Counts the # of invalid stores for all apps or for a specific app.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.DeleteInvalidStores(RequirementsLive.Sdk.Api.Data.Model.DeleteInvalidStores)">
            <summary>
                Deletes the invalid stores associated with all apps, or a specific app, returning the number of deleted stores.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.CreateStore(RequirementsLive.Sdk.Api.Data.Model.CreateStore)">
            <summary>
                Creates a store.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.PutStore(RequirementsLive.Sdk.Api.Data.Model.PutStore)">
            <summary>
            Puts the store, as-is into the target site.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.GetStore(RequirementsLive.Sdk.Api.Data.Model.GetStore)">
            <summary>
                Gets the store specified in the request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.StoreExists(RequirementsLive.Sdk.Api.Data.Model.StoreExists)">
            <summary>
                Checks to see if a store exists with the specified store Id in the site to which the API is currently authenticated
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.CreateLoginToken(RequirementsLive.Sdk.Api.Data.Model.CreateLoginToken)">
            <summary>
            Creates a log token for token based user login.
            </summary>
            <param name="request">The request.</param>
            <returns>a login token</returns>        
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.EvaluateExpression(RequirementsLive.Sdk.Api.Data.Model.EvaluateExpression)">
            <summary>
            Evaluates an XPath expression against a specified store Id, or store xml.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.GetArtifact(System.String)">
            <summary>
            Gets the artifact.
            </summary>
            <param name="artifactId">The artifact identifier.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient.PutArtifact(RequirementsLive.Sdk.Api.Data.Model.ArtifactDetails,System.IO.Stream)">
            <summary>
            Uploads an artifact
            </summary>
            <param name="artifact">The artifact info.</param>
            <param name="stream">The stream.</param>
            <returns>the artifact id for the artifact that was just uploaded.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Data.RqlDataApiClientExtensions.StoreExists(RequirementsLive.Sdk.Api.Data.IRqlDataApiClient,System.String)">
            <summary>
                Checks to see if a store exists with the specified store Id in the site to which the API is currently authenticated
            </summary>
            <param name="client">The client.</param>
            <param name="storeId">The store identifier.</param>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.RqlDataApiClientConfiguration">
            <summary>
            Represents the data API service client configuration
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Data.NamespaceDoc">
            <summary>
            Contains the types used to configure and invoke platform data services.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient">
            <summary>
                Interface representing the RqlExportApiClient.
            </summary>
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:RequirementsLive.Sdk.Api.IAuthenticatedClient" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient.GetStores(RequirementsLive.Sdk.Api.Export.Model.GetStores)">
            <summary>
                Get Stores from the given queue using the specified filter and paging arguments.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient.GetStoresCount(RequirementsLive.Sdk.Api.Export.Model.GetStoresCount)">
            <summary>
                Gets the count of stores in a given queue using the specified filter.
            </summary>
            <param name="request">The request.</param>
            <returns>
                The number of stores in the given queue.
            </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient.ListQueueStores(RequirementsLive.Sdk.Api.Export.Model.ListQueueStores)">
            <summary>
                Lists the stores ids associated with the given queue name and filter. Supports paging.
            </summary>
            <param name="request">The request object.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient.BeginBulkExport(RequirementsLive.Sdk.Api.Export.Model.BeginBulkExport)">
            <summary>
                Begins a bulk export request
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient.GetBulkExportStatus(RequirementsLive.Sdk.Api.Export.Model.GetBulkExportStatus)">
            <summary>
                Gets the status of the bulk export initiated by <see cref="M:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient.BeginBulkExport(RequirementsLive.Sdk.Api.Export.Model.BeginBulkExport)" />
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient.GetBulkExportFile(RequirementsLive.Sdk.Api.Export.Model.GetBulkExportFile)">
            <summary>
                Gets the stream to the bulk export file created when the job started by <see cref="M:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient.BeginBulkExport(RequirementsLive.Sdk.Api.Export.Model.BeginBulkExport)" /> has
                completed successfully.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient.GetQueue(RequirementsLive.Sdk.Api.Export.Model.GetQueue)">
            <summary>
                Returns xml containing Item nodes representing each item returned from the queue.
                The root node is named queue, with multiple nodes below it named item.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient.UpdateStore(RequirementsLive.Sdk.Api.Export.Model.UpdateStore)">
            <summary>
                Updates the store based on one or more target and select expressions.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.BeginBulkExport">
            <summary>
                Represents the request object for the BeginBulkExport API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.BeginBulkExport.QueueName">
            <summary>The name of a queue.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.BeginBulkExport.QueueFilter">
            <summary>
                A Sql queue filter
            </summary>
            <value>
                The queue filter.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.BeginBulkExportResponse">
            <summary>
                Represents the response object for the BeginBulkExport API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.BeginBulkExportResponse.JobId">
            <summary>
                The job identifier associated with the Bulk Export. Use this with <see cref="T:RequirementsLive.Sdk.Api.Export.Model.GetBulkExportStatus" /> to find out
                when the export is complete.
            </summary>
            <value>
                The job identifier.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.GetBulkExportFile">
            <summary>
            Represents the request object for the GetBulkExportFile API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetBulkExportFile.JobId">
            <summary>
                The system JobId created by a previous <see cref="T:RequirementsLive.Sdk.Api.Export.Model.BeginBulkExport" /> request
            </summary>
            <value>
                The job identifier.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.GetBulkExportFileResponse">
            <summary>
            Represents the response object for the GetBulkExportFile API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.GetBulkExportStatus">
            <summary>
                Represents the request object for the GetBulkExportStatus API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetBulkExportStatus.JobId">
            <summary>
                The system JobId created by a previous <see cref="T:RequirementsLive.Sdk.Api.Export.Model.BeginBulkExport" /> request
            </summary>
            <value>
                The job identifier.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.GetBulkExportStatusResponse">
            <summary>
                Represents the response object for the GetBulkExportStatus API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetBulkExportStatusResponse.Status">
            <summary>
                This is the status of the Bulk Export job that was triggered by the <see cref="T:RequirementsLive.Sdk.Api.Export.Model.BeginBulkExport" /> API.
            </summary>
            <value>
                The status.
            </value>
            <remarks>
                Possible Status values are:
                Cancelled, Cancelling, Completed, Failed, Queued, Running, AcquiringLock, LockAcquired, ReleasingLock,
                LockReleased, Deferring, Deferred, FailedQueueing.
                <para>
                    The Job is complete when the Status contains any of the following values:   Completed, Failed, or Cancelled.
                </para>
                <para>
                    The Job hasn't started yet if it's Queued and will never start if it's FailedQueuing.
                </para>
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.GetQueue">
            <summary>
                Represents the request object for the GetQueue API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetQueue.QueueName">
            <summary>The name of a queue.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetQueue.QueueFilter">
            <summary>
                A Sql queue filter
            </summary>
            <value>
                The queue filter.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetQueue.PageIndex">
            <summary>
                Gets or sets the index of the page to get
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetQueue.PageSize">
            <summary>
                Gets or sets the size of the page.
            </summary>
            <value>
                The size of the page.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetQueue.ContextStoreId">
            <summary>
                This contains a store Id that is used as the Context Store while performing the entity query
            </summary>
            <remarks>
                <para>
                    This is required in cases where the entity is an
                    Analyze Queue that has a filter that has a dependency on a specific store id.
                    If the wrong store is the context store, queries will return 0 stores.
                </para>
                <para>
                    Any expressions on filters on the @queue-filter or @query-filter that depend on store context will use this
                    store as the current store.
                </para>
                Example: @query-filter "StoreId = {{store-id()}}"
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.GetQueueResponse">
            <summary>
                Represents the response object for the GetQueue API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetQueueResponse.Xml">
            <summary>
                The queue xml containing Item nodes representing each item returned from the queue.  The root node is named queue,
                with mutltiple nodes below it named item.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.GetStores">
            <summary>
            Represents the request object for the GetStores API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetStores.QueueName">
            <summary>The name of a queue.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetStores.QueueFilter">
            <summary>
                A Sql queue filter
            </summary>
            <value>
                The queue filter.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetStores.PageIndex">
            <summary>
                Gets or sets the index of the page to get
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetStores.PageSize">
            <summary>
                Gets or sets the size of the page.
            </summary>
            <value>
                The size of the page.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetStores.ContextStoreId">
            <summary>
                This contains a store Id that is used as the Context Store while performing the entity query
            </summary>
            <remarks>
                <para>
                    This is required in cases where the entity is an
                    Analyze Queue that has a filter that has a dependency on a specific store id.
                    If the wrong store is the context store, queries will return 0 stores.
                </para>
                <para>
                    Any expressions on filters on the @queue-filter or @query-filter that depend on store context will use this
                    store as the current store.
                </para>
                Example: @query-filter "StoreId = {{store-id()}}"
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.GetStoresResponse">
            <summary>
            Represents the response object for the GetStores API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetStoresResponse.Stores">
            <summary>
                The list of stores found by the <see cref="T:RequirementsLive.Sdk.Api.Export.Model.GetStores" /> request.
            </summary>
            <value>
                The stores.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.Store">
            <summary>
            Describes the Store properties.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.Store.Id">
            <summary>The store id.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.Store.Xml">
            <summary>The store xml.</summary>
            <remarks>
                When using making a <cref cref="T:RequirementsLive.Sdk.Api.Export.Model.GetStores" /> request with the <see cref="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.GetStores(RequirementsLive.Sdk.Api.Export.Model.GetStores)" /> method,
                the <see cref="P:RequirementsLive.Sdk.Api.Export.Model.Store.CompressedXml" /> is returned instead, and this will be null.        
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.Store.CompressedXml">
            <summary>The store compressed xml.</summary>
            <remarks>
                The CompressedXml may be uncompressed with a <see cref="T:System.IO.Compression.GZipStream" />
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.GetStoresCount">
            <summary>
            Represents the request object for the GetStoresCount API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetStoresCount.QueueName">
            <summary>The name of a queue.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetStoresCount.QueueFilter">
            <summary>Specifies filter of the queue.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetStoresCount.ContextStoreId">
            <summary>
                This contains a store Id that is used as the Context Store while performing the entity query
            </summary>
            <remarks>
                <para>
                    This is required in cases where the entity is an
                    Analyze Queue that has a filter that has a dependency on a specific store id.
                    If the wrong store is the context store, queries will return 0 stores.
                </para>
                <para>
                    Any expressions on filters on the @queue-filter or @query-filter that depend on store context will use this
                    store as the current store.
                </para>
                Example: @query-filter "StoreId = {{store-id()}}"
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.GetStoresCountResponse">
            <summary>
            Represents the response object for the GetStoresCount API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.GetStoresCountResponse.Count">
            <summary>The number of stores in a queue.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.ListQueueStores">
            <summary>
            An API request object to retrieve a list of the store ids based on the queue name and an optional queue filter.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.ListQueueStores.QueueName">
            <summary>
                The name of a queue.
            </summary>
            <value>
                The name of the queue.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.ListQueueStores.QueueFilter">
            <summary>
                A Sql queue filter
            </summary>
            <value>
                The queue filter.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.ListQueueStores.PageIndex">
            <summary>
                Gets or sets the index of the page to get
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.ListQueueStores.PageSize">
            <summary>
                Gets or sets the size of the page.
            </summary>
            <value>
                The size of the page.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.ListQueueStores.ContextStoreId">
            <summary>
                This contains a store Id that is used as the Context Store while performing the entity query
            </summary>
            <remarks>
                <para>
                    This is required in cases where the entity is an
                    Analyze Queue that has a filter that has a dependency on a specific store id.
                    If the wrong store is the context store, queries will return 0 stores.
                </para>
                <para>
                    Any expressions on filters on the @queue-filter or @query-filter that depend on store context will use this
                    store as the current store.
                </para>
                Example: @query-filter "StoreId = {{store-id()}}"
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.ListQueueStoresResponse">
            <summary>
            Represents the response from the ListQueueStores Export API method.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.Model.ListQueueStoresResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Export.Model.ListQueueStoresResponse"/> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.ListQueueStoresResponse.StoreIds">
            <summary>
            Contains a list of store Ids returned by the parameters in the ListQueueStores request.
            </summary>
            <value>
            The store ids.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.MarkStoreColumnAsExported">
            <summary>
                Represents the request object for the MarkStoreColumnAsExported API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.MarkStoreColumnAsExported.QueueName">
            <summary>The name of a queue.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.MarkStoreColumnAsExported.Ids">
            <summary>
                A list of Store Ids to have the store columns marked as completed.
            </summary>
            <value>
                The store ids.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.MarkStoreColumnAsExported.ExportDateColumnName">
            <summary>
                The name of one or more columns to update with the current Utc timestamp to indicate the store has been exported.
            </summary>
            <value>
                The name of the export date column, or multiple names if separated by a semi-colon.
            </value>
            <remarks>
                An example of multiple column names:   DateExported1;DateExported2
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.MarkStoreColumnAsExported.MarkForReexportColumnName">
            <summary>
                The name of one or more columns to CLEAR the exported timestamp so that records are effectively marked for
                re-export.
            </summary>
            <value>
                The name of the mark for reexport column., or multiple names if separated by a semi-colon.
            </value>
            <remarks>
                An example of multiple names: DateExported1;DateExported2
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.MarkStoreColumnAsExportedResponse">
            <summary>
                Represents the response object for the MarkStoreColumnAsExported API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.MarkStoreColumnAsExportedResponse.Completed">
            <summary>
                Indicates the process of marking the columns is complete. Will always be true.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.MarkStoresAsExported">
            <summary>
            Represents the request object for the MarkStoresAsExported API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.MarkStoresAsExported.QueueName">
            <summary>The name of a queue.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.MarkStoresAsExported.Ids">
            <summary>
                A list of Store Ids to have the store columns marked as completed.
            </summary>
            <value>
                The store ids.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.MarkStoresAsExportedResponse">
            <summary>
            Represents the response object for the MarkStoresAsExported API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.MarkStoresAsImported">
            <summary>
            Represents the request object for the MarkStoresAsImported API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.MarkStoresAsImported.QueueName">
            <summary>The name of a queue.</summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.Model.MarkStoresAsImportedResponse">
            <summary>
            Represents the response object for the MarkStoresAsImported API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.UpdateStore.StoreId">
            <summary>
            The Id of the Store to be updated
            </summary>
            <value>
            The store identifier.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.UpdateStore.Targets">
            <summary>
                A list of target properties to target for update. Each item in this array is expected to have a matching select in
                the <see cref="P:RequirementsLive.Sdk.Api.Export.Model.UpdateStore.Targets" /> list, at the same index.
            </summary>
            <value>
                The targets.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.UpdateStore.Selects">
            <summary>
            A List of selects to match the targets specified in the <see cref="P:RequirementsLive.Sdk.Api.Export.Model.UpdateStore.Selects"/> list. Each Select must have a corresponding Target, at the same index.
            </summary>
            <value>
            The selects.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Export.Model.UpdateStore.RunWorkbook">
            <summary>
            Controls whether or not the workbook is run when the store is updated.
            </summary>
            <value>
              <c>true</c> if [run workbook]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.RqlExportApiClient">
            <summary>
            Represents the Export API service client 
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.BeginBulkExport(RequirementsLive.Sdk.Api.Export.Model.BeginBulkExport)">
            <summary>
            Begin Bulk Export.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.GetBulkExportFile(RequirementsLive.Sdk.Api.Export.Model.GetBulkExportFile)">
            <summary>
            Get Bulk Export File.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.GetBulkExportStatus(RequirementsLive.Sdk.Api.Export.Model.GetBulkExportStatus)">
            <summary>
            Get Bulk Export Status.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.GetQueue(RequirementsLive.Sdk.Api.Export.Model.GetQueue)">
            <summary>
            Get Queue.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.GetStores(RequirementsLive.Sdk.Api.Export.Model.GetStores)">
            <summary>
            Get Stores based on the specified queue and filter.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.GetStoresCount(System.String)">
            <summary>
            Gets the count of stores in a given queue.
            </summary>
            <param name="queueName">Name of the queue.</param>
            <returns>
            The number of stores in the given queue.
            </returns>
            <seealso cref="!:PutStore(string,string)" />
            <seealso cref="T:RequirementsLive.Sdk.Api.Data.Model.DeleteStore" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.GetStoresCount(System.String,System.String)">
            <summary>
            Gets the count of stores in a given queue using the specified filter.
            </summary>
            <param name="queueName">Name of the queue.</param>
            <param name="queueFilter">The queue filter.</param>
            <returns>
            The number of stores in the given queue.
            </returns>
            <seealso cref="!:PutStore(string,string)" />
            <seealso cref="T:RequirementsLive.Sdk.Api.Data.Model.DeleteStore" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.GetStoresCount(RequirementsLive.Sdk.Api.Export.Model.GetStoresCount)">
            <summary>
            Gets a store.
            </summary>
            <param name="request">The GetStore request</param>
            <returns>The GetStore response</returns>
            <seealso cref="!:PutStore(PutStore)"/>
            <seealso cref="!:DeleteStore(DeleteStore)"/>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.ListQueueStores(System.String,System.String,System.Int32,System.Int32)">
            <summary>
                Lists the stores ids associated with the given queue name and filter. Supports paging.
            </summary>
            <param name="queueName">Name of the queue, such as MyAppName.List</param>
            <param name="queueFilter">The queue filter. Is a Sql filter</param>
            <param name="pageIndex">Index of the page when using paging.</param>
            <param name="pageSize">Size of the page when using paging.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.ListQueueStores(RequirementsLive.Sdk.Api.Export.Model.ListQueueStores)">
            <summary>
                Lists the stores ids associated with the given queue name and filter. Supports paging.
            </summary>
            <param name="request">The request object.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.MarkStoreColumnAsExported(RequirementsLive.Sdk.Api.Export.Model.MarkStoreColumnAsExported)">
            <summary>
            Mark stores as imported.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.MarkStoresAsExported(RequirementsLive.Sdk.Api.Export.Model.MarkStoresAsExported)">
            <summary>
            Mark stores as exported.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.MarkStoresAsImported(RequirementsLive.Sdk.Api.Export.Model.MarkStoresAsImported)">
            <summary>
            Mark stores as imported.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.UpdateStore(RequirementsLive.Sdk.Api.Export.Model.UpdateStore)">
            <summary>
            Mark stores as imported.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Export.RqlExportApiClient"/> class.
            </summary>
            <param name="site">The site.</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClient.#ctor(RequirementsLive.Sdk.Api.Export.RqlExportApiClientConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Export.RqlExportApiClient"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.RqlExportApiClientConfiguration">
            <summary>
            Represents the Export API service client configuration
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Export.RqlExportApiClientExtentions">
            <summary>
                Extension Methods for <see cref="T:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient" />
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClientExtentions.GetStoresCount(RequirementsLive.Sdk.Api.Export.IRqlExportApiClient,System.String)">
            <summary>
                Gets the count of stores in a given queue.
            </summary>
            <param name="client">The client.</param>
            <param name="queueName">Name of the queue.</param>
            <returns>
                The number of stores in the given queue.
            </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Export.RqlExportApiClientExtentions.GetStoresCount(RequirementsLive.Sdk.Api.Export.IRqlExportApiClient,System.String,System.String)">
            <summary>
                Gets the count of stores in a given queue using the specified filter.
            </summary>
            <param name="client">The client.</param>
            <param name="queueName">Name of the queue.</param>
            <param name="queueFilter">The queue filter.</param>
            <returns>
                The number of stores in the given queue.
            </returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Helper.ApiHelper">
            <summary>
                Factory class to create API clients.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.ApiHelper.CreateAuthenticatedBusinessApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential,RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient)">
            <summary>
                Creates an authenticated instance of the Business API client.
            </summary>
            <param name="credential">The credential.</param>
            <param name="client">The client to re authenticate if not null.</param>
            <returns>An authenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient" /> </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.ApiHelper.CreateAuthenticatedContentApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential,RequirementsLive.Sdk.Api.Content.IRqlContentApiClient)">
            <summary>
                Creates an authenticated instance of the Content API client.
            </summary>
            <param name="credential">The credential.</param>
            <param name="client">The client to re authenticate if not null.</param>
            <returns>An authenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Content.IRqlContentApiClient" /> </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.ApiHelper.CreateAuthenticatedDataApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential,RequirementsLive.Sdk.Api.Data.IRqlDataApiClient)">
            <summary>
                Creates an authenticated instance of the Data API client.
            </summary>
            <param name="credential">The credential.</param>
            <param name="client">The client to re authenticate if not null.</param>
            <returns>An authenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient" /> </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.ApiHelper.CreateAuthenticatedImportApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential,RequirementsLive.Sdk.Api.Import.IRqlImportApiClient)">
            <summary>
                Creates an authenticated instance of the Import API client.
            </summary>
            <param name="credential">The credential.</param>
            <param name="client">The client to re authenticate if not null.</param>
            <returns>An authenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Import.IRqlImportApiClient" /> </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.ApiHelper.CreateAuthenticatedExportApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential,RequirementsLive.Sdk.Api.Export.IRqlExportApiClient)">
            <summary>
                Creates an authenticated instance of the Export API client.
            </summary>
            <param name="credential">The credential.</param>
            <param name="client">The client to re authenticate if not null.</param>
            <returns>An authenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient" /> </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.ApiHelper.CreateAuthenticatedLocalApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential,RequirementsLive.Sdk.Api.Local.IRqlLocalApiClient)">
            <summary>
                Creates an authenticated instance of the Local API client.
            </summary>
            <param name="credential">The credential.</param>
            <param name="client">The client to re authenticate if not null.</param>
            <returns>An authenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Local.IRqlLocalApiClient" /> </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.ApiHelper.CreateAuthenticatedClusterMetricsApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential,RequirementsLive.Sdk.Api.Metrics.IRqlClusterMetricsApiClient)">
            <summary>
            Creates the authenticated Cluster Metrics API client.
            </summary>
            <param name="credential">The credential.</param>
            <param name="client">The client to re authenticate if not null.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.ApiHelper.ReauthenticateIfNearingExpiration(RequirementsLive.Sdk.Api.IAuthenticatedClient,RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Re-authenticates the api client connection if the authentication ticket is nearing expiration.
            </summary>
            <param name="apiClient">The API client.</param>
            <param name="credential">The credential.</param>
            <returns>
                returns true if the api client is authenticated, or is already authenticated. Returns false if the
                re-authentication fails.
            </returns>
            <remarks>
                This method is provided to prevent long running processes from failing because the API client instance has expired.
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.ApiHelper.ReauthenticateIfNearingExpiration(RequirementsLive.Sdk.Api.IAuthenticatedClient,System.String,System.String)">
            <summary>
                Re-authenticates the api client connection if the authentication ticket is nearing expiration.
            </summary>
            <param name="apiClient">The API client.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <returns>
                returns true if the api client is authenticated, or is already authenticated. Returns false if the
                re-authentication fails.
            </returns>
            <remarks>
                This method is provided to prevent long running processes from failing because the API client instance has expired.
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Helper.AuthenticatedApiClientFactory">
            <summary>
                A version of IApiClientFactory that returns Authenticated instances of the API clients, or null if it couldn't
                authenticate.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Helper.IApiClientFactory">
            <summary>
                A class factory to return instances of Rql API Clients
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.IApiClientFactory.CreateBusinessApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
            Creates the Business API client.
            </summary>
            <param name="credential">The credential</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.IApiClientFactory.CreateImportApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates the Import API client.
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.IApiClientFactory.CreateDataApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates the Data API client.
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.IApiClientFactory.CreateExportApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates the Export API client.
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.IApiClientFactory.CreateContentApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates the Content API client.
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.IApiClientFactory.CreateClusterMetricsApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates the Cluster Metrics API client.
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Helper.RqlApiClientFactory">
            <summary>
                Factory class for creating instances of the various RQL API Clients.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.RqlApiClientFactory.CreateBusinessApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates an unauthenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Business.IRqlBusinessApiClient" />
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.RqlApiClientFactory.CreateLocalApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates an unauthenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Local.IRqlLocalApiClient" />
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.RqlApiClientFactory.CreateContentApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates an unauthenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Content.IRqlContentApiClient" />
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.RqlApiClientFactory.CreateDataApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates an unauthenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Data.IRqlDataApiClient" />
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.RqlApiClientFactory.CreatImportApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates an unauthenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Import.IRqlImportApiClient" />
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.RqlApiClientFactory.CreatExportApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates an unauthenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Export.IRqlExportApiClient" />
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.RqlApiClientFactory.CreateClusterMetricsApiClient(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
                Creates an unauthenticated instance of <see cref="T:RequirementsLive.Sdk.Api.Metrics.IRqlClusterMetricsApiClient" />
            </summary>
            <param name="credential">The credential.</param>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Helper.RqlCredential">
            <summary>
            RqlCredential
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.RqlCredential.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Helper.RqlCredential.#ctor(RequirementsLive.Sdk.Api.Helper.RqlCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Helper.RqlCredential"/> class.
            </summary>
            <param name="credential">The credential.</param>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Helper.RqlCredential.DesignTimeInstance">
            <summary>
            Used mainly for wpf 
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Helper.RqlCredential.Site">
            <summary>
                Gets or sets the site ths API client will target.
            </summary>
            <value>
                The site.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Helper.RqlCredential.UserName">
            <summary>
                Gets or sets the name of the user that will authenticate against the given API.
            </summary>
            <value>
                The name of the user.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Helper.RqlCredential.Password">
            <summary>
                Gets or sets the password of the user that will authenticate against the given API.
            </summary>
            <value>
                The password.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Helper.RqlCredential.PasswordBytes">
            <summary>
            Gets or sets the password bytes when serializing to XML. 
            </summary>
            <value>
            The password bytes.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Helper.RqlCredential.IsLocalCredential">
            <summary>
                Indicates if the credential is against a locally hosted site.
            </summary>
            <value>
                <c>true</c> if this instance is local credential; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Helper.RqlCredential.LocalHostPort">
            <summary>
                Gets or sets the port number if this credential is for a site hosted in the LocalDev environment
            </summary>
            <value>
                The port number.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.IAuthenticatedClient.AuthenticationTicketIssued">
            <summary>
                The Local Time stamp that the API client authentication ticket was issued.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Import.IRqlImportApiClient">
            <summary>
            An interface representing the Rql Import API client, for use w/ unit testing.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Import.IRqlImportApiClient.ImportEntity(RequirementsLive.Sdk.Api.Import.Model.ImportEntity)">
            <summary>
                Imports an Entity based on the information defined in the ImportEntity request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Import.Model.ImportEntity">
            <summary>
                Represents the request object for the ImportEntity API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Import.Model.ImportEntityResponse">
            <summary>
                Represents the response from the ImportEntity API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.ImportEntityResponse.ImportActionResult">
            <summary>
                Indicates the result of the Import API request
            </summary>
            <value>
                The import action result.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.ImportEntityResponse.NewOrUpdatedStoreId">
            <summary>
                This is the store Id of entity that was imported or updated
            </summary>
            <value>
                The new or existing store identifier.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult">
            <summary>
                Indicates the result of the Import API request
            </summary>
            <remarks>
                When adding new enumerations here, be sure to update the equivelant enum in the Java SDK
            </remarks>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.Created">
            <summary>
                The entity was created
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.Updated">
            <summary>
                The entity was updated
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.SkippedBecauseRecordDoesNotExist">
            <summary>
                The entity was skipped because record does not exist
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.SkippedBecauseRecordAlreadyExists">
            <summary>
                The entity was skipped because record already exists
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.SkippedBecauseNoChanges">
            <summary>
                The entity was not updated because there were no changes
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.SkippedBecauseConditionIsFalse">
            <summary>
                The entity was skipped because the Entity's UpdateCondition evaluated to false
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.NoValueForKeyPropertyError">
            <summary>
                A non-nullable key property had no value.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.NoValueForRequiredPropertyError">
            <summary>
                A required property had no value.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.EntityWithoutKeysError">
            <summary>
                The entity has no property defined as a key
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.VariableWithoutMatchesError">
            <summary>
                A property in the request does not match up with any of the variables defined in the request.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.VariablesWithDuplicateEntitiesError">
            <summary>
                A variable could not be resolved because more than one entities were found for it.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.NoMatchingViewFoundError">
            <summary>
                There was no matching view for the entity specified in the import request
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.VariableNotDefinedError">
            <summary>
                A variable used in the request was not defined
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.DataListHasNoPropertiesError">
            <summary>
                A data list in the request has no properties defined in it.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.DataListWithoutKeysError">
            <summary>
                A data list has been defined without any properties marked as a key.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.UpdateConditionEvaluationFailedError">
            <summary>
                An exception occurred when evaluating the UpdateCondition specified in the import request.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.NoDefaultDataElementError">
            <summary>
                There were no data elements that were marked as the default data element by having a null or empty Name value.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.DuplicateEntitiesError">
            <summary>
                The import failed because the entity is duplicated already based on the key property or properties.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.NoValueStoreIdPropertyError">
            <summary>
                The import failed because the storeId property that was defined does not have a value.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.VariableHasNotBeenResolvedYetError">
            <summary>
            The variable has not been resolved yet error
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.VariableDidNotResolveError">
            <summary>
            The variable did not resolve to a value and the variable's "must resolve" property was true.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportActionResult.PossibleSqlInjection">
            <summary>
            The variable did not resolve to a value and the variable's "must resolve" property was true.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Import.Model.ImportAction">
            <summary>
                Specifies the kind of import action to perform.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportAction.None">
            <summary>
                Take no action during the import.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportAction.CreateAndUpdate">
            <summary>
                Create a new entity if needed, and update an existing one.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportAction.Create">
            <summary>
                Create a new entity
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportAction.Update">
            <summary>
                Update existing entity
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportAction.OptimisticCreateAndUpdate">
            <summary>
                Will try to create without checking for existence. If fail to create, will revert back to CreateAndUpdate
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.ImportAction.OptimisticCreate">
            <summary>
                Will try to create without checking for existence. If fail to create, it won't continue
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Import.Model.UpdateMode.Changes">
            <summary>
                The entity should only be updated only if there are changes to it.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Import.Model.Variable">
            <summary>
                A Variable is used to perform a lookup of the StoreId of a parent record using specified match criteria.
            </summary>
            <remarks>
                A variable is used when importing an entity that has relations with other entities via the StoreIds or lookup
                values.
                The Match collection provide the ability specify lookup criteria.
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Import.Model.Variable.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Import.Model.Variable" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Variable.Name">
            <summary>
                The name of the variable, and is referenced by <see cref="P:RequirementsLive.Sdk.Api.Import.Model.Property.VariableName" />
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Variable.AppName">
            <summary>
                The Name of the app to perform the lookup. Aka: Requirements Name.
            </summary>
            <value>
                The name of the application.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Variable.MustResolve">
            <summary>
                If true, the variable must resolve to a value that is not null or empty or it will be considered an import error.
            </summary>
            <value>
              <c>true</c> if [must resolve]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Variable.CacheValue">
            <summary>
            If true, variable lookups are cached
            </summary>
            <value>
              <c>true</c> if [cache value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Variable.Queue">
            <summary>
                The Queue to perform the lookup. Optioanal.
            </summary>
            <value>
                The queue.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Variable.Filter">
            <summary>
                The Filter to filter requested entities. The filter applies to the requested app/queue and should be curly braces format. 
            </summary>
            <value>
                The filter.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Variable.Matches">
            <summary>
                A set of filter conditions used to match the record being looked up. Will become part of a filter expression on a
                queue.
            </summary>
            <value>
                The match terms
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Variable.Value">
            <summary>
                The calculated store id value of the variable once it's been evaluated.
            </summary>
            <value>
                The value.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Variable.DataTable">
            <summary>
                The DataTable associated with the variable lookup when it's evaluated
            </summary>
            <value>
                The data table.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Import.Model.Match">
            <summary>
                A match is used to build up part of a filter clause used to resolve the Variable.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Match.PropertyName">
            <summary>
                The name of a property in the queue being filtered.
            </summary>
            <value>
                The name of the property.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Match.Value">
            <summary>
                The value to filter on in the queue column being filtered.
            </summary>
            <value>
                The value.
            </value>
            <remarks>
                Use Value or <seealso cref="P:RequirementsLive.Sdk.Api.Import.Model.Match.VariableName" />, don't use both.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Match.VariableName">
            <summary>
                A variable to use when filtering on the queue column specified in PropertyName
            </summary>
            <value>
                The name of the variable.
            </value>
            <remarks>
                Use <seealso cref="P:RequirementsLive.Sdk.Api.Import.Model.Match.Value" /> or VariableName, don't use both.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Match.ExcludeFromFilter">
            <summary>
            When ExcludeFromFilter is specified to true the clause will be excluded from filtering to resovle the variable.
            You have to use filter attribute on the variable level to explicitly set resolving filter.
            </summary>
            <value>
                Boolean.
            </value>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Import.Model.DataList.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Import.Model.DataList" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Property.IsXml">
            <summary>
                Indicates that the property value contains valid XML that will be posted in an element underneath the property Name.
            </summary>
            <value>
                <c>true</c> if this instance is XML; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Import.Model.Property.IsXmlNode">
            <summary>
                Indicates that the property value contains the entire property node as the valid XML. The node will be posted at the same level as other properties.
            </summary>
            <value>
                <c>true</c> if this instance is XML node; otherwise, <c>false</c>.
            </value>
            <remarks>
            When this value is true, a the value is expected to contain an entire XML node and this node will be posted 
            <example>
                 
            </example>
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Import.RqlImportApiClient">
            <summary>
                Represents the data API service client
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Import.RqlImportApiClient.ImportEntity(RequirementsLive.Sdk.Api.Import.Model.ImportEntity)">
            <summary>
                Imports an Entity based on the information defined in the ImportEntity request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Import.RqlImportApiClientConfiguration">
            <summary>
                Represents the data API service client configuration
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Integration.Model.UpdateZendeskSiteUsersTags">
            <summary>
                Represents the request object for the UpdateZendeskSiteUsersTags API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Integration.Model.UpdateZendeskSiteUsersTagsResponse">
            <summary>
                Represents the response object for the UpdateZendeskSiteUsersTags API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Integration.Model.UpdateZendeskSiteUsersTagsResponse.TaskId">
            <summary>
                The task Id associated with handling this request, or an empty string if the Help Widget is
                disabled in site config.
                Can be queried for completion using
                <see cref="!:RqlContentApiClient.GetTask(string)" />
            </summary>
            <value>
                The task identifier, or an empty string if the Help Widget is disabled in site config
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Integration.Model.UpdateZendeskUserTags">
            <summary>
                Represents the request object for the UpdateZendeskUserTags API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Integration.Model.UpdateZendeskUserTagsResponse">
            <summary>
                Represents the response object for the UpdateZendeskUserTags API method.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Integration.RqlIntegrationApiClient.UpdateZendeskSiteUsersTags">
            <summary>Update Zendesk site users tags.</summary>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Integration.RqlIntegrationApiClient.UpdateZendeskUserTags(RequirementsLive.Sdk.Api.Integration.Model.UpdateZendeskUserTags)">
            <summary>Update Zendesk user tags.</summary>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Integration.RqlIntegrationApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Integration.RqlIntegrationApiClient"/> class.
            </summary>
            <param name="site">The site.</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Integration.RqlIntegrationApiClient.#ctor(RequirementsLive.Sdk.Api.Integration.RqlIntegrationApiClientConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Integration.RqlIntegrationApiClient"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Integration.RqlIntegrationApiClientConfiguration">
            <summary>
            Represents the content API service client configuration.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Local.Model.GetProductRelease">
            <summary>
                This method retrieves the product redistributable by the version.  If no version is passed in, the latest version
                is returned.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Local.Model.GetProductRelease.ProductCode">
            <summary>
                The product code to retrieve
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Local.Model.GetProductRelease.VersionNumber">
            <summary>
                The version of the platform to retrieve, in the form of x.x.x.x
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Local.Model.GetProductReleaseResponse">
            <summary>
                Represents the response object for the GetPlatform API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Local.Model.GetProductVersion">
            <summary>
                Gets the current version of the product
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Local.Model.GetProductVersion.ProductCode">
            <summary>
                The product code to retrieve
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Local.Model.GetProductVersionResponse">
            <summary>
                Response object
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Local.Model.GetProductVersionResponse.ProductVersion">
            <summary>
                The version of the product.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Local.Model.GetSites">
            <summary>
            Gets the sites allowed by the authenticated user
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:RequirementsLive.Sdk.Api.Local.Model.GetSitesResponse" -->
        <member name="P:RequirementsLive.Sdk.Api.Local.Model.GetSitesResponse.LocalDevSites">
            <summary>
            Contains a list of sites the user has access to for local development.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Local.Model.LocalDevSite">
            <summary>
            Object returned for the LocalDev site
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Local.Model.LocalDevSite.SiteStoreId">
            <summary>
            The storeId of the site
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Local.Model.LocalDevSite.SiteName">
            <summary>
            The site url of the site
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Local.Model.LocalDevSite.DataSourceSiteStoreId">
            <summary>
            Contains the storeId of the site which this user is allowed to get data from.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Local.Model.LocalDevSite.DataSourceSiteName">
            <summary>
            Contains the name of the site which this user is allowed to get data from.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Local.Model.LocalDevSite.DataSourceAppNames">
            <summary>
            Contains a list of AppNames that the client can use to pull Data from {DataSourceSiteName}
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Local.Model.ProductCode">
            <summary>
                Product Codes for the various products that may be updated on the local development environment.
            </summary>
            <remarks>
                These product match up w/ values defined elsewhere in the system.
                See [working dir]\src\System\Core\Obsolete\Services\IProductService.cs
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Local.Model.RqlLocalApiClientExtensions">
            <summary>
                Convenience methods for the RqlLocalApiClient. Implemented as extensions on the interface, instead of extra methods
                on the class.
                This keeps the number of methods on <see cref="T:RequirementsLive.Sdk.Api.Local.IRqlLocalApiClient" /> down.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Local.Model.RqlLocalApiClientExtensions.GetProductRelease(RequirementsLive.Sdk.Api.Local.IRqlLocalApiClient,System.String,System.String)">
            <summary>
                This method retrieves the product redistributable by the version.  If no version is passed in, the latest version
                is returned.
            </summary>
            <param name="client">The client.</param>
            <param name="productCode">The product code.</param>
            <param name="versionNumber">The version number.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Local.Model.RqlLocalApiClientExtensions.GetLatestProductRelease(RequirementsLive.Sdk.Api.Local.IRqlLocalApiClient,System.String)">
            <summary>
                This method retrieves the latest product redistributable available in case the version # is not known.
            </summary>
            <param name="client">The client.</param>
            <param name="productCode">The product code.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Local.Model.RqlLocalApiClientExtensions.GetProductVersion(RequirementsLive.Sdk.Api.Local.IRqlLocalApiClient,System.String)">
            <summary>
                Gets the current version of the product
            </summary>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Local.RqlLocalApiClient">
            <summary>
                Represents the Offline API service client
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Local.RqlLocalApiClient.GetProductRelease(RequirementsLive.Sdk.Api.Local.Model.GetProductRelease)">
            <summary>
                This method retrieves the product redistributable by the version.  If no version is passed in, the latest version
                is returned.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Local.RqlLocalApiClient.GetProductVersion(RequirementsLive.Sdk.Api.Local.Model.GetProductVersion)">
            <summary>
                Gets the current version of the product
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Local.RqlLocalApiClient.GetSites">
            <summary>
            Gets the sites allowed by the authenticated user
            </summary>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Local.RqlLocalApiClient.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Local.RqlLocalApiClient" /> class.
            </summary>
            <param name="site">The site.</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Local.RqlLocalApiClient.#ctor(RequirementsLive.Sdk.Api.Local.RqlLocalApiClientConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Local.RqlLocalApiClient" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Local.IRqlLocalApiClient">
            <summary>
            Interface to represent the Rql Local Api Client.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Local.RqlLocalApiClientConfiguration">
            <summary>
                Represents the data API service client configuration
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.IRqlClusterMetricsApiClient">
            <summary>
                Represents the Metrics API service client
            </summary>
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:RequirementsLive.Sdk.Api.IAuthenticatedClient" />
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.IRqlClusterMetricsApiClient.ListInstances(RequirementsLive.Sdk.Api.Metrics.Model.ListInstances)">
            <summary>
                An API to return a list of info about EC2 Instances associated with the RQL cluster. The InstanceIds may be then
                used with the <see cref="M:RequirementsLive.Sdk.Api.Metrics.IRqlClusterMetricsApiClient.GetInstanceMetrics(RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetrics)" /> API
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.IRqlClusterMetricsApiClient.GetInstanceMetrics(RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetrics)">
            <summary>
                Gets the instance metrics based on the given request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.IRqlClusterMetricsApiClient.GetClusterMetrics(RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetrics)">
            <summary>
                Gets metrics information about all the instances in a cluster.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetrics">
            <summary>
                The request object for obtaining metrics info about all instances in the cluster.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetrics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetrics"/> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetrics.RequestedInstanceTypes">
            <summary>
                A list of types to indicate which instance types(web, data services, database stores, project, etc) being targeted
                for metrics collection.
                All servers in the cluster are targeted if this list is empty. <see cref="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceInfo.InstanceType" /> as returned
                by <seealso cref="T:RequirementsLive.Sdk.Api.Metrics.Model.ListInstances" />. 
                <seealso cref="T:RequirementsLive.Sdk.Api.Metrics.Model.InstanceType" />
            </summary>
            <value>
                The requested instance types.
            </value>
            <remarks>
                Use this parameter to limit which servers you are collecting metrics from.
                <para>
                    All servers in the cluster are targeted if this list is empty. <see cref="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceInfo.InstanceType" /> as
                    returned by <seealso cref="T:RequirementsLive.Sdk.Api.Metrics.Model.ListInstances" />
                </para>
                <seealso cref="T:RequirementsLive.Sdk.Api.Metrics.Model.InstanceType" />
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetrics.RequestedMetrics">
            <summary>
            A list of strings to indicate which metrics are being requested. <see cref="T:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric" />.
            All metrics are returned if this list is empty.
            </summary>        
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetricsResponse">
            <summary>
                The response object containing the metrics info about instances in the cluster.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetricsResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetricsResponse" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetricsResponse.InstanceMetrics">
            <summary>
                A list of metrics for instances in the Cluster
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetricsResponse.ClusterEditionType">
            <summary>
                Gets or sets the type of the cluster edition, such as Vanguard, Project, or Growler.
            </summary>
            <value>
                The type of the cluster edition.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetrics">
            <summary>
                The request object to get metrics associated with a specific EC2 instance.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetrics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetrics"/> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetrics.InstanceId">
            <summary>
            The EC2 InstanceId being targeted for the metrics query request.
            </summary>
            <value>
            The EC2 InstanceId.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetrics.RequestedMetrics">
            <summary>
            A list of strings to indicate which metrics are being requested. <see cref="T:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric" />.
            All metrics are returned if this list is empty.
            </summary>        
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetricsResponse">
            <summary>
                The response object to contain the requested metric results.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetricsResponse.InstanceMetrics">
            <summary>
                Gets or sets the instance metrics.
            </summary>
            <value>
                The instance metrics.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceInfo.InstanceId">
            <summary>
                The EC2 instance id
            </summary>
            <value>
                The instance identifier.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceInfo.InstanceName">
            <summary>
                The name of the instance.
            </summary>
            <value>
                The name of the instance.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceInfo.InstanceType">
            <summary>
                Gets or sets the type of the instance. <see cref="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceInfo.InstanceType" />
            </summary>
            <value>
                The type of the instance.
            </value>
            <remarks>
                The InstanceType will tell you what type of role this server plays in the Cluster, for example, web server, data
                services, or one of the database servers
                <para>
                    The image types are as follows:
                    web = A web server in the cluster
                    ds = The Data Services server - this handles build requests, propagators and other tasks
                    dsw = Data Services Worker - this typically has extra job handlers for propagators or other tasks as needed.
                    dbt = this is the database server for transactions
                    dbs = this is the database server for stores
                    dbe = this is the database server for entities
                </para>
                <seealso cref="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceInfo.InstanceType"/>        
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceInfo.InstanceClass">
            <summary>
                The EC2 instance type, such as m4.large, or c4.2xlarge.  See AWS EC2 docs for possible instance types
            </summary>
            <value>
                The instance class.
            </value>
            <remarks>
                See the EC2 Instance Types documentation for values
                https://aws.amazon.com/ec2/instance-types/
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceInfo.InstanceTags">
            <summary>
                Gets or sets the tags associated with the EC2 instance
            </summary>
            <value>
                The tags.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric">
            <summary>
            Represents the metrics which may be requested via the ClusterMetrics API. 
            Many of them map directly from Metrics available in AWS CloudWatch, some of them are Custom metrics
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric.AllMetricNames">
            <summary>
            Returns a list of each of the metric names defined on this class.
            </summary>
            <returns></returns>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric.MemoryInUsePercent">
            <summary>
                This is the metric that returns the percentage of memory in use for a given EC2 instance.
            </summary>
            <remarks>
                This is a custom CloudWatch metric supported by the CloudWatchMetricsUploader service.
            </remarks>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric.TotalFreePhysicalMemoryGB">
            <summary>
                This is the metric which returns the total free physical memory available, in Gigabytes.
            </summary>
            <remarks>
                This is a custom CloudWatch metric supported by the CloudWatchMetricsUploader service.
            </remarks>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric.VolumesPercentFree">
            <summary>
                The disk space remaining percent for each of the Volumes on an instances
            </summary>
            <remarks>
                <para>
                    This is a custom CloudWatch metric supported by the CloudWatchMetricsUploader service.
                </para>
                <para>
                    This metric is different from the others in that it returns a 1:many result instead of a 1:1 result.
                    For each EC2 instance, there may be several volumes attached to the instance.
                    The MetricName returned will have names such as "Volume_C_PercentFree", and "Volume_E_PercentFree".
                </para>
            </remarks>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric.CPUUtilization">
            <summary>
                The cpu utilization metric from AWS CloudWatch.
            </summary>
            <remarks>
                <seealso cref="!:http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/ec2-metricscollected.html" />
            </remarks>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric.DiskReadOps">
            <summary>
                The DiskReadOps metric from AWS Cloudwatch
            </summary>
            <remarks>
                <seealso cref="!:http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/ec2-metricscollected.html" />
            </remarks>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric.DiskWriteOps">
            <summary>
                The DiskWriteOps metric from AWS CloudWatch
            </summary>
            ///
            <remarks>
                <seealso cref="!:http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/ec2-metricscollected.html" />
            </remarks>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric.DiskReadBytes">
            <summary>
                The DiskReadBytes metric from AWS CloudWatch
            </summary>
            <remarks>
                <seealso cref="!:http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/ec2-metricscollected.html" />
            </remarks>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric.DiskWriteBytes">
            <summary>
                The DiskWriteBytes metric from AWS CloudWatch
            </summary>
            <remarks>
                <seealso cref="!:http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/ec2-metricscollected.html" />
            </remarks>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric.NetworkOut">
            <summary>
                The NetworkOut metric from AWS CloudWatch
            </summary>
            <remarks>
                <seealso cref="!:http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/ec2-metricscollected.html" />
            </remarks>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetric.NetworkIn">
            <summary>
                The NetworkIn metric from AWS CloudWatch
            </summary>
            <remarks>
                <seealso cref="!:http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/ec2-metricscollected.html" />
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo">
            <summary>
                Class containing Metrics about an EC2 Instance.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.CPUUtilization">
            <summary>
                Gets or sets the cpu utilization.
            </summary>
            <value>
                The cpu utilization.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.MemoryInUse">
            <summary>
                The percentage of the memory in use
            </summary>
            <value>
                The memory in use percent.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.TotalFreePhysicalMemoryGB">
            <summary>
                The amount of free memory available on this instance, in Gigabytes.
            </summary>
            <value>
                The total free physical memory gb.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.DiskReadOps">
            <summary>
                The DiskReadOps reported by CloudWatch
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.DiskWriteOps">
            <summary>
                The DiskWriteOps reported by CloudWatch.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.DiskReadBytes">
            <summary>
                The DiskReadBytes reported by CloudWatch
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.DiskWriteBytes">
            <summary>
                The DiskWriteBytes reported by Cloudwatch
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.NetworkIn">
            <summary>
                The NetworkIn metric reported by AWS CloudWatch
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.NetworkOut">
            <summary>
                The NetworkOut metric reported by AWS CloudWatch
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.InstanceInfo">
            <summary>
                Basic instance information.
            </summary>
            <value>
                The instance information.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.VolumesPercentFree">
            <summary>
                A list of <see cref="T:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.Metric" /> containing the percentage of disk space remaining on the volume.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.Metric">
            <summary>
                A class to represent a CloudWatch metric statistic
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.Metric.MetricName">
            <summary>
                Gets or sets the name of the metric.
            </summary>
            <value>
                The name of the metric.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.Metric.LastDatapoint">
            <summary>
                This is the last datapoint obtained from CloudWatch
            </summary>
            <value>
                The last datapoint.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.Datapoint.Timestamp">
            <summary>
                Gets or sets the timestamp.
            </summary>
            <value>
                The timestamp.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.Datapoint.Unit">
            <summary>
                The unit, such as Percent, Bytes, or Gigabytes. See
                <see cref="!:http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit" /> for
                complete list of supported units.
            </summary>
            <value>
                The unit.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.Datapoint.Average">
            <summary>
                The average value for the given period and sample count.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.Datapoint.Maximum">
            <summary>
                The maximum value for the given period and sample count.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.InstanceMetricsInfo.Datapoint.Minimum">
            <summary>
                The minimum value for the given period and sample count.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.Model.InstanceType">
            <summary>
            These are the instance type codes that let you know what role a particular instance plays in the cluster of servers in the RQL Platform
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceType.Project">
            <summary>
            This is the instance type when the RQL Cluster is a Project cluster. This Cluster type has 1 server, which has all RQL platform services, web portals, and database servers on it.
            This is mostly used for the QA environment, such as the Alpha cluster.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceType.Web">
            <summary>
            This is the instance type for web servers in a cluster, other than Project.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceType.DataServices">
            <summary>
            This is the instance type for the Data Services node in the Cluster, which handles build requests, system job processing and other services.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceType.DataServicesWorker">
            <summary>
            This is the instance type for Data Services Worker nodes in the Cluster.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceType.DatabaseEntities">
            <summary>
            This is the instance type for the database server that supports the Entities database in the Cluster.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceType.DatabaseStores">
            <summary>
            This is the instance type for the database server that supports the Stores database in the Cluster.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceType.DatabaseTransactions">
            <summary>
            This is the instance type for the database server that supports the Transactions database in the Cluster.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.Metrics.Model.InstanceType.Rabbit">
            <summary>
            This is the instance type for the servers that supports the RabbitMQ messaging servers in the Cluster.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.Model.ListInstances">
            <summary>
                Request object for the ListInstances API request
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.Model.ListInstancesResponse">
            <summary>
                The response object for the ListInstances API request.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.Model.ListInstancesResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Metrics.Model.ListInstancesResponse" /> class.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.ListInstancesResponse.ClusterEditionType">
            <summary>
                Gets or sets the type of the cluster edition, such as Vanguard, Project, or Growler.
            </summary>
            <value>
                The type of the cluster edition.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Metrics.Model.ListInstancesResponse.InstanceInfos">
            <summary>
                A list of basic info about EC2 Instance Ids that cam be used with the <see cref="T:RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetrics" /> API
            </summary>
            <value>
                Instance info.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.Model.NamespaceDoc">
            <summary>
            Contains the types used when communicating with platform data services.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.RqlClusterMetricsApiClient">
            <summary>
                Represents the Metrics API service client
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.RqlClusterMetricsApiClient.GetClusterMetrics(RequirementsLive.Sdk.Api.Metrics.Model.GetClusterMetrics)">
            <summary>
                Gets metrics information about all the instances in a cluster.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.RqlClusterMetricsApiClient.GetInstanceMetrics(RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetrics)">
            <summary>
            Gets the instance metrics based on the given request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.RqlClusterMetricsApiClient.ListInstances(RequirementsLive.Sdk.Api.Metrics.Model.ListInstances)">
            <summary>
                An API to return a list of info about EC2 Instances associated with the RQL cluster. The InstanceIds may be then
                used with the <see cref="M:RequirementsLive.Sdk.Api.Metrics.RqlClusterMetricsApiClient.GetInstanceMetrics(RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetrics)" /> API
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.RqlClusterMetricsApiClient.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Metrics.RqlClusterMetricsApiClient" /> class.
            </summary>
            <param name="site">The site.</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.RqlClusterMetricsApiClient.#ctor(RequirementsLive.Sdk.Api.Metrics.RqlClusterMetricsApiClientConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:RequirementsLive.Sdk.Api.Metrics.RqlClusterMetricsApiClient" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Metrics.RqlClusterMetricsApiClientConfiguration">
            <summary>
            Represents the Metrics API service client configuration
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Metrics.RqlMetricsApiClientExtensions.ListInstances(RequirementsLive.Sdk.Api.Metrics.IRqlClusterMetricsApiClient)">
            <summary>
                An API to return a list of info about EC2 Instances associated with the RQL cluster. The InstanceIds may be then
                used with the <see cref="T:RequirementsLive.Sdk.Api.Metrics.Model.GetInstanceMetrics" /> API
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.CustomSiteSetting.Name">
            <summary>
            Gets or sets the setting's name.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.CustomSiteSetting.Value">
            <summary>
            Gets or sets the setting's value.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.CustomSiteSetting.Description">
            <summary>
            Gets or sets the setting's description.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.GetCustomSiteSettings">
            <summary>
            Represents the request object for the GetCustomSiteSettings API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.GetCustomSiteSettings.Names">
            <summary>
            Gets or sets a comma separated list of setting names.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.GetCustomSiteSettingsResponse">
            <summary>
            Represents the response object for the GetCustomSiteSettings API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.GetCustomSiteSettingsResponse.CustomSiteSettings">
            <summary>
            Gets the list of <see cref="T:RequirementsLive.Sdk.Api.Model.CustomSiteSetting"/> custom site setting objects.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.GetSiteConfiguration">
            <summary>
            Represents the request object for the GetSiteConfiguration API method.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.GetSiteConfigurationResponse">
            <summary>
            Represents the response object for the GetSiteConfiguration API method.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.GetSiteConfigurationResponse.ConfigurationXml">
            <summary>
            Gets or sets the site configuration xml
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.SetCustomSiteSettings">
            <summary>
            Represents the request object for the SetCustomSiteSetting API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.SetCustomSiteSettingsResponse">
            <summary>
            Represents the response object for the SetCustomSiteSetting API method
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.ApiRequest`1">
            <summary>
            Provides the base implementation used to create plaform API request objects.
            </summary>
            <typeparam name="TResponse">The type of the response object</typeparam>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.ApiResponse">
            <summary>
            Provides the base implementation used to create plaform API response objects.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.ApiResponse.ResponseStatus">
            <summary>
            Gets or sets the response status of the request
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.DataRequestStatus">
            <summary>
                Status of request.
                Values: Invalid | Queued | Running | Completed | Failed | CompletedWithErrors
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.Authenticate">
            <summary>
            Represents the request object for the Authenticate API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.Authenticate.UserName">
            <summary>
            Gets or sets the user name
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.Authenticate.Password">
            <summary>
            Gets or sets the password
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.Authenticate.IsLocalDevClient">
            <summary>
                Indicates whether this is authenticating a request from the RqlLocalApiClient, which uses a separate
                flag in the user store to enable access for this API client.
            </summary>
            <value>
                <c>true</c> if this instance is local dev client; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.Authenticate.IsOfflineClient">
            <summary>
                Indicates whether this is authenticating a request from the 
                <see cref="T:RequirementsLive.Sdk.Api.Offline.RqlOfflineApiClient" />. A setting in the User store can disable the Offline API client.
            </summary>
            <value>
                <c>true</c> if this instance is an Offline API client; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.AuthenticateResponse">
            <summary>
            Represents the response object for the Authenticate API method
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.AuthenticateResponse.UserId">
            <summary>
            Gets or sets the user id
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.AuthenticateResponse.UserName">
            <summary>
            Gets or sets the user name
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.AuthenticateResponse.Ticket">
            <summary>
            Gets or sets the authentication ticket
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.AuthenticateResponse.TicketExpires">
            <summary>
            Gets or sets the authentication ticket's expiration date
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.SecureApiRequest`1">
            <summary>
            Provides the base implementation used to create plaform API request objects for operations that require authentication.
            </summary>
            <typeparam name="TResponse">The type of the response object</typeparam>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Model.SecureApiRequest`1.ServiceStack#ServiceHost#IRequiresSoapMessage#Message">
            <summary>
            Gets or sets the underlying SOAP message
            </summary>
            <remarks>
            This property will only have a value during SOAP requests
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.SecureApiResponse">
            <summary>
            Provides the base implementation used to create plaform API response objects for operations that require authentication.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Model.NamespaceDoc">
            <summary>
            Contains the types used when communicating with platform services.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Offline.Model.GetOfflineSiteOptions">
            <summary>
                Request object to get offline options associated with a site.
            </summary>
            <remarks>
                NOTE:  This API doesn't require authentication, so it inherits from ApiRequest instead of SecureApiRequest
                The reason this API doesn't require authentication is because the the sign in screen needs to know if single sign
                on, or potentially other options
                are enabled for a site and we won't have credentials.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Offline.Model.GetOfflineSiteOptions.SiteName">
            <summary>
                The name of the site for which we are asking about offline options.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Offline.Model.GetOfflineSiteOptionsResponse">
            <summary>
                The Get Offline Site Options Response.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Offline.Model.GetOfflineSiteOptionsResponse.SingleSignonEnabled">
            <summary>
                Indicates whether or not the site has Single Sign logins turned on.
            </summary>
            <remarks>
                If this is true, the Offline Client needs to present a single signon interface.
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Offline.Model.GetCurrentProductVersion">
            <summary>
                Request object to check for the latest available version # for a given product code, and user name.
            </summary>
            <remarks>
                NOTE:  This API doesn't require authentication, so it inherits from ApiRequest instead of SecureApiRequest
                The reason this API doesn't require authentication is because the iOS Offline Client needs to use this API to check
                for updates.
                We need to check for updates BEFORE the user has logged in, so the API credentials won't be available when we want
                to check for this.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Offline.Model.GetCurrentProductVersion.ProductCode">
            <summary>
                The product code for which you need to know the current version # on the server side of things.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Offline.Model.GetCurrentProductVersion.UserName">
            <summary>
                The username associated w/ this request. For Offline client, a user may be associated w/ a specific version.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Offline.Model.GetCurrentProductVersionResponse">
            <summary>
                Response object containing the latest available version # for the specified product code and user name.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Offline.Model.GetCurrentProductVersionResponse.ProductCode">
            <summary>
                The ProductCode that was associated w/ the <see cref="T:RequirementsLive.Sdk.Api.Offline.Model.GetCurrentProductVersion" /> request.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Offline.Model.GetCurrentProductVersionResponse.VersionString">
            <summary>
                The latest available version # for the specified ProductCode and UserName in the <see cref="T:RequirementsLive.Sdk.Api.Offline.Model.GetCurrentProductVersion" />
                request.
            </summary>
            <remarks>
                The System.Version class doesn't serialize to JSON nicely, so serializing a string and providing a read only property.
            </remarks>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Offline.Model.GetCurrentProductVersionResponse.Version">
            <summary>
                The latest available version # for the specified ProductCode and UserName in the <see cref="T:RequirementsLive.Sdk.Api.Offline.Model.GetCurrentProductVersion" />
                request.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Offline.Model.GetOnlineStore.StoreId">
            <summary>
            The store Id (NOT fully qualified) to download from the online site.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Offline.Model.GetOnlineStore.WantCompressed">
            <summary>
            specifies if we want the store XML returned compressed in gzip format.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Offline.Model.GetOnlineStoreResponse.StoreZip">
            <summary>If compressed store xml was requested, it'll be here. Otherwise null.</summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.Offline.Model.ProductFeedback.UserId">
            <summary>
            User Id who submitted the feedback.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Offline.RqlOfflineApiClient">
            <summary>
            Represents the Offline API service client 
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Offline.RqlOfflineApiClient.GetOfflineSiteOptions(RequirementsLive.Sdk.Api.Offline.Model.GetOfflineSiteOptions)">
            <summary>
                Gets offline options for a site.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Offline.RqlOfflineApiClient.GetCurrentProductVersion(RequirementsLive.Sdk.Api.Offline.Model.GetCurrentProductVersion)">
            <summary>
                Gets the current product version for a given product code and optionally by username.
            </summary>
            <param name="request"></param>
            <returns></returns>
            <remarks>
                For the Offline Client product code, a specific version can be associated w/ the user, or in the site
                configuration.  If not otherwise configured, it returns the version # for the specified product code from the
                launch data file.
            </remarks>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Offline.RqlOfflineApiClient.Authenticate(System.String,System.String)">
            <summary>
                Authenticates this API client using the specified username and password.
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Offline.IRqlOfflineApiClient.GetOfflineSiteOptions(RequirementsLive.Sdk.Api.Offline.Model.GetOfflineSiteOptions)">
            <summary>
                Get Options from the server about associated with the site offline site.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Offline.IRqlOfflineApiClient.UploadArtifact(System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Uploads an artifact, returning the artifact stream.
            </summary>
            <param name="stream">a stream to the artifact contents</param>
            <param name="properties">artifact properties, to be sent as http headers</param>
            <returns></returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.Offline.RqlOfflineApiClientConfiguration">
            <summary>
            Represents the Offline API service client configuration
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.Offline.RqlOfflineApiClientConfiguration.#ctor">
            <summary>
                Constructs new instance of <see cref="T:RequirementsLive.Sdk.Api.Offline.RqlOfflineApiClientConfiguration" /> w/ JSON as the default Transport Protocol.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.SecureApiClient.ApiXmlNamespace">
            <summary>
                Specifies a URI that represents the XML namespace for RQL Platform API types.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.SecureApiClient.AuthorizationHeaderName">
            <summary>
                Speficies the authorization header name used when sending secure API requests.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.SecureApiClient.DigitalSignatureNamespace">
            <summary>
                Specifies a URI that points to the XML-Signature Syntax and Processing algorithm for computing and verifying XML
                digital signatures.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.SecureApiClient.SignatureHeaderName">
            <summary>
                Speficies the signature header name used when sending secure SOAP requests.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.SecureApiClient.TimestampHeaderName">
            <summary>
                Speficies the timestamp header name used when sending secure API requests.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.SecureApiClient.UserNameHeaderName">
            <summary>
                Speficies the user name header name used when sending secure API requests.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.SecureApiClient.ApiAccessKey">
            <summary>
                Speficies the API accesss key used when sending secure API requests.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.SecureApiClient`1.AuthenticationTicket">
            <summary>
                Gets the authentication used for authenticating requests.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.SecureApiClient`1.AuthenticatedUserName">
            <summary>
                Gets or sets the name of the authenticated user.
            </summary>
            <value>
                The name of the authenticated user.
            </value>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.SecureApiClient`1.AuthenticationTicketIssued">
            <summary>
                Gets the time the authentication ticket was issued. The server will consider it expired after it's a certain age.
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.SecureApiClient`1.Authenticate(System.String,System.String)">
            <summary>
                Executes the Authenticate API method.
            </summary>
            <param name="userName">The user's name</param>
            <param name="password">The user's password</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.SecureApiClient`1.GetSiteConfiguration">
            <summary>
                Executes the GetSiteConfiguration API method.
            </summary>
            <returns>The GetSiteConfiguration response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.SecureApiClient`1.GetSiteConfiguration(RequirementsLive.Sdk.Api.Model.GetSiteConfiguration)">
            <summary>
                Executes the GetSiteConfiguration API method.
            </summary>
            <param name="request">The GetSiteConfiguration request</param>
            <returns>The GetSiteConfiguration response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.SecureApiClient`1.GetCustomSiteSetting(System.String)">
            <summary>
                Executes the GetCustomSitesSetting API method.
            </summary>
            <param name="name">The name of the setting</param>
            <returns>The custom site setting</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.SecureApiClient`1.GetCustomSiteSettings">
            <summary>
                Executes the GetCustomSitesSetting API method.
            </summary>
            <returns>The GetCustomSiteSettings response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.SecureApiClient`1.GetCustomSiteSettings(System.String[])">
            <summary>
                Executes the GetCustomSitesSetting API method.
            </summary>
            <param name="names">The name of the setting</param>
            <returns>
                The list of <see cref="T:RequirementsLive.Sdk.Api.Model.CustomSiteSetting" /> objects describing custom site settings.</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.SecureApiClient`1.GetCustomSiteSettings(RequirementsLive.Sdk.Api.Model.GetCustomSiteSettings)">
            <summary>
                Executes the GetCustomSiteSettings API method.
            </summary>
            <param name="request">The GetCustomSiteSettings request</param>
            <returns>The GetCustomSiteSettings response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.SecureApiClient`1.OnBeforeSendRequest(System.Net.HttpWebRequest)">
            <summary>
            Called when before the request is sent to apply extra info to the HTTP request.
            </summary>
            <param name="httpWebRequest">The HTTP web request.</param>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.SecureApiClient`1.SetCustomSiteSetting(System.String,System.String,System.String)">
            <summary>
                Executes the SetCustomSiteSetting API method.
            </summary>
            <param name="name">The name of the setting</param>
            <param name="value">The value of setting </param>
            <param name="description">The description of the setting</param>
            <returns>The SetCustomSiteSetting response</returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Api.SecureApiClient`1.SetCustomSiteSettings(RequirementsLive.Sdk.Api.Model.SetCustomSiteSettings)">
            <summary>
                Executes the SetCustomSiteSetting API method.
            </summary>
            <param name="request">The SetCustomSiteSetting request</param>
            <returns>The SetCustomSiteSetting response</returns>
        </member>
        <member name="F:RequirementsLive.Sdk.Api.SecureApiClientConfiguration._signatureAlgorithm">
            <summary>
                Gets or sets the algorithm used to compute digital signatures. Supported algorithms are SHA1 and SHA256.
            </summary>
            <remarks>
                Constants for the URIs that represent the cryptographic algorithms that are used to compute digital signatures are
                exposed by the System.IdentityModel.Tokens.SecurityAlgorithms type.
            </remarks>
            <seealso cref="T:System.IdentityModel.Tokens.SecurityAlgorithms" />
        </member>
        <member name="P:RequirementsLive.Sdk.Api.SecureApiClientConfiguration.UserName">
            <summary>
                Gets or sets the user name used when sending digitally signed requests.
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Api.SecureApiClientConfiguration.SigningCertificate">
            <summary>
                Gets or set the X.509 private key used when computing digital signatures.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Api.NamespaceDoc">
            <summary>
            Contains the types necessary to build platform application programming interfaces.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Content.ContentServiceClient">
            <summary>
            Exposes content related functionality.
            </summary>
            <remarks>
            Use this class to work with content services.
            </remarks>
        </member>
        <member name="T:RequirementsLive.Sdk.Data.DataServiceClient">
            <summary>
            Exposes data related functionality
            </summary>
            <remarks>
            Use this class to work with data services.
            </remarks>
            <namespace>
            RequirementsLive.Sdk.Data
            </namespace>
        </member>
        <member name="M:RequirementsLive.Sdk.Data.DataServiceClient.DownloadArtifact(System.String,System.String)">
            <summary>
            Downloads an artifact from a site.
            </summary>
            <remarks>
            Use this method to get object with stream of specified artifact.
            </remarks>
            <syntax>public DownloadArtifactResponse DownloadArtifact(string storeId, string artifactId)</syntax>
            <param name="storeId">Type: System.String</param>
            <param name="artifactId">Type: System.String</param>
            <returns>Type: <see cref="T:RequirementsLive.Sdk.Data.Model.DownloadArtifactResponse">DownloadArtifactResponse</see> </returns>
        </member>
        <member name="M:RequirementsLive.Sdk.Data.DataServiceClient.DownloadArtifact(RequirementsLive.Sdk.Data.Model.DownloadArtifactRequest)">
            <summary>
            Downloads an artifact from a site.
            </summary>
            <remarks>
            Use this method to get stream of specified artifact.
            </remarks>
            <syntax>public Stream DownloadArtifact(DownloadArtifactRequest request)</syntax>
            <param name="request">Type: <see cref="T:RequirementsLive.Sdk.Data.Model.DownloadArtifactRequest">DownloadArtifactRequest</see></param>
            <returns>Type: System.IO.Stream</returns>
        </member>
        <member name="T:RequirementsLive.Sdk.NamespaceDoc">
            <summary>
            Contains the types necessary to build RequirementsLive platform service and client applications for developinhg widely distributed applications. 
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Helpers.ContentType.ExcelXls">
            <summary>
            The Mime type for .xsl Excel before Excel2007
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Helpers.ContentType.Excel">
            <summary>
            The Mime type for .xlsx, Excel2007 or newer.
            </summary>
        </member>
        <member name="F:RequirementsLive.Sdk.Helpers.ContentType.LegacyPng">
            <summary>
            The content type fpr PNG files before it was adopted as a standard. This was in use in the platform for some time.
            </summary>
        </member>
        <member name="T:RequirementsLive.Sdk.Security.ISecureService">
            <summary>
            Defines properties and methods API services that support authentication
            </summary>
        </member>
        <member name="M:RequirementsLive.Sdk.Security.ISecureService.Authenticate(RequirementsLive.Publishing.Services.AuthenticationRequest)">
            <summary>
            Authenticates a set of user credentials
            </summary>
            <param name="request">Authentication request</param>
            <returns>Authentication response</returns>
        </member>
        <member name="T:RequirementsLive.Sdk.Security.SecureServiceClient`1">
            <summary>
            Represents an API service that supports authentication. Provides a base class for API services that require authentication.
            </summary>
            <typeparam name="T">The type of the API service requiring authentication</typeparam>
        </member>
        <member name="P:RequirementsLive.Sdk.Security.SecureServiceClient`1.AuthenticationResponse">
            <summary>
            Gets or sets the current authentication ticket used for authenticating secure requests
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Security.SecureServiceClient`1.Log">
            <summary>
            Gets the log4net logger used for API logging
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Security.SecureServiceClient`1.ServiceUrl">
            <summary>
            Gets or sets the endpoint url used for making API service calls
            </summary>
        </member>
        <member name="P:RequirementsLive.Sdk.Security.SecureServiceClient`1.Site">
            <summary>
            Gets or sets the hostname of the endpoint url for making API service calls
            </summary>
        </member>
    </members>
</doc>
